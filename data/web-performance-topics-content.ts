type SlugifiedTopics =
  | 'general'
  | 'performance-budget'
  | 'measuring-performance'
  | 'core-web-vitals'
  | 'browser'
  | 'case-studies'
  | 'cache-and-memoization'
  | 'prefetching'
  | 'images'
  | 'ux'
  | 'build-tools'
  | 'react'
  | 'javascript'
  | 'web-apis'
  | 'css'
  | 'fonts'
  | 'sustainability'
  | 'backend'
  | 'architecture'
  | 'infrastructure'
  | 'books'
  | 'tweets'
  | 'community';

type Topics = Record<SlugifiedTopics, string>;

export const topics: Topics = {
  general:
    '<samp>\n\n<h1 id="general">General</h1>\n<ul>\n<li><a href="https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/">📝 Front-End Performance Checklist 2021</a></li>\n<li><a href="https://levelup.gitconnected.com/the-ultimate-guide-to-modern-web-application-performance-ec4eec9939">📝 The ultimate guide to modern web application performance</a></li>\n<li><a href="https://engineering.entelo.com/chromes-paint-flashing-tool-b5c880849635">📝 Chrome’s Paint Flashing Tool</a></li>\n<li><a href="https://hacks.mozilla.org/2017/09/building-the-dom-faster-speculative-parsing-async-defer-and-preload/">📝 Building the DOM faster: speculative parsing, async, defer and preload</a></li>\n<li><a href="https://medium.com/quintoandar-tech-blog/improving-react-runtime-performance-dec0a5a4ffda">📝 Improving React Runtime Performance</a></li>\n<li><a href="https://hacks.mozilla.org/2017/09/building-the-dom-faster-speculative-parsing-async-defer-and-preload/">📝 Building the DOM faster</a></li>\n<li><a href="https://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html">📝 Maybe you don&#39;t need Rust and WASM to speed up your JS</a></li>\n<li><a href="https://web.dev/fast/">📝 Fast load times</a></li>\n<li><a href="https://requestmetrics.com/web-performance/monitoring-core-web-vital">📝 Monitoring Your Core Web Vital (Performance) Metrics</a></li>\n<li><a href="https://developers.google.com/web/fundamentals/performance/get-started">📝 Loading Performance Overview</a></li>\n<li><a href="https://www.brendangregg.com/flamegraphs.html">📝 Flame Graphs</a></li>\n<li><a href="https://web.dev/fast/">📝 Fast load times</a></li>\n<li><a href="https://calibreapp.com/blog/bundle-size-optimization">📝 Small Bundles, Fast Pages: What To Do With Too Much JavaScript</a></li>\n<li><a href="https://cloudinary.com/products/media_optimizer/web-performance-guide">📝 Web Performance: Trends and Insights from 4 Top Performance Experts</a></li>\n<li><a href="https://sia.codes/posts/render-blocking-resources/">📝 How to Eliminate Render-Blocking Resources: a Deep Dive</a></li>\n<li><a href="https://www.debugbear.com/blog/performant-front-end-architecture">📝 Performant front-end architecture</a></li>\n<li><a href="https://simplified.dev/performance/impact-of-web-performance">📝 The Impact of Web Performance</a></li>\n<li><a href="https://calibreapp.com/blog/common-mistakes-in-tracking-speed">📝 5 Common Mistakes Teams Make When Tracking Performance</a></li>\n<li><a href="https://www.speedcurve.com/blog/javascript-long-tasks/">📝 Are your JavaScript long tasks frustrating users?</a></li>\n<li><a href="https://philipwalton.com/articles/my-challenge-to-the-web-performance-community/">📝 My Challenge to the Web Performance Community</a></li>\n<li><a href="https://medium.com/miro-engineering/optimize-spa-bundle-size-to-speed-up-application-loading-c988cef57257">📝 Optimize SPA bundle size to speed up application loading</a></li>\n<li><a href="https://calendar.perfplanet.com/2021/a-unified-theory-of-web-performance/">📝 A Unified Theory of Web Performance</a></li>\n<li><a href="https://3perf.com/talks/web-perf-101">📝 Web Perf 101</a></li>\n<li><a href="https://3perf.com/content">📝 3Perf Guides</a></li>\n<li><a href="https://netflixtechblog.com/fixing-performance-regressions-before-they-happen-eab2602b86fe">📝 Fixing Performance Regressions Before they Happen</a></li>\n<li><a href="https://www.youtube.com/watch?v=Mk-t189JSe0">📝 Javascript Performance in Extreme Environments</a></li>\n<li><a href="https://fershad.com/writing/website-optimisation-increase-conversions-engagement/">📝 The why of website optimisation: Increase site conversions</a></li>\n<li><a href="https://fershad.com/writing/website-optimisation-reduce-operational-costs/">📝 The why of website optimisation: Reduce operational costs</a></li>\n<li><a href="https://fershad.com/writing/website-optimisation-improve-search-ranking/">📝 The why of website optimisation: Better search ranking</a></li>\n<li><a href="https://fershad.com/writing/website-optimisation-reduce-environmental-impact/">📝 The why of website optimisation: Help the planet</a></li>\n<li><a href="https://fershad.com/writing/website-optimisation-better-user-experience/">📝 The why of website optimisation: Better user experience</a></li>\n<li><a href="https://web.dev/script-component">📝 Optimizing third-party script loading in Next.js</a></li>\n<li><a href="https://igor.dev/posts/experiences-web-frameworks-future-me">📝 experiences. Web. frameworks. future. me.</a></li>\n<li><a href="https://www.webperf.tips/tip/cached-js-misconceptions">📝 Why Your Cached JavaScript Is Still Slow and Incurs Performance Overhead</a></li>\n<li><a href="https://calibreapp.com/blog/get-started-with-performance">📝 Getting Started with Web Performance</a></li>\n<li><a href="https://www.builder.io/blog/the-ultimate-guide-to-optimizing-javascript-for-quick-page-loads">📝 The Ultimate Guide to Optimizing JavaScript for Quick Page Loads</a></li>\n<li><a href="https://tannerhodges.com/blog/performance-and-the-big-picture">📝 Performance and the Big Picture</a></li>\n<li><a href="https://tannerhodges.com/blog/learning-web-performance">📝 Learning Web Performance</a></li>\n<li><a href="https://infrequently.org/2022/05/performance-management-maturity">📝 A Management Maturity Model for Performance</a></li>\n<li><a href="https://www.tunetheweb.com/performance/">📝 Top 5 Performance Recommendations</a></li>\n<li><a href="https://kaleidawave.github.io/posts/web-terminology">📝 Definitions of web terminology</a></li>\n<li><a href="https://engineering.atspotify.com/2022/09/from-development-to-real-users-how-to-create-a-web-performance-story">📝 From Development to Real Users: How to Create a Web Performance Story</a></li>\n<li><a href="https://medhatdawoud.net/blog/why-performance-matters">📝 Why Performance Matters?</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/a-performance-maturity-matrix">📝 A Performance Maturity Matrix</a></li>\n<li><a href="https://web.dev/tag-best-practices">📝 Best practices for tags and tag managers</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/an-html-first-mental-model">📝 An HTML-first Mental Model</a></li>\n<li><a href="https://slack.engineering/gantry-slacks-fast-booting-frontend-framework">📝 Gantry: Slack’s Fast-booting Frontend Framework</a></li>\n<li><a href="https://betterprogramming.pub/low-hanging-web-performance-fruits-a-cheat-sheet-3aa1d338b6c1">📝 Low-Hanging Web Performance Fruits: A Cheat Sheet</a></li>\n<li><a href="https://www.youtube.com/watch?v=p_8oR9GFRvQ">🎥 Improving Page Performance in Modern Web Apps</a></li>\n<li><a href="https://www.youtube.com/watch?v=reztLS3vomE">🎥 Speed Essentials: Key Techniques for Fast Websites</a></li>\n<li><a href="https://vimeo.com/254858694">🎥 Improving Page Performance in Modern Web Apps</a></li>\n<li><a href="https://www.youtube.com/watch?v=mLjxXPHuIJo">🎥 Demystifying Speed Tooling</a></li>\n<li><a href="https://www.youtube.com/watch?v=Lh9q3h2khlc">🎥 Top 10 performance pitfalls</a></li>\n<li><a href="https://www.youtube.com/watch?v=pSCHN4oU2JQ&amp;ab_channel=estellevw">🎥 Fantastic Frontend Performance Tricks &amp; Why We Do Them</a></li>\n<li><a href="https://www.youtube.com/watch?v=Jz3Fu1o356g&amp;ab_channel=WebConferencesAmsterdam">🎥 The Bright Future of Web Performance</a></li>\n<li><a href="https://www.youtube.com/watch?v=GvUGN0AIfDE">🎥 When JavaScript Bytes</a></li>\n<li><a href="https://www.youtube.com/watch?v=uVrp_A7rj_I">🎥 Common Mistakes That Degrade Frontend Performance</a></li>\n<li><a href="https://www.youtube.com/watch?v=uXv9JFvrnwo">🎥 Deep dive into third-party performance</a></li>\n<li><a href="https://www.youtube.com/watch?v=MiXy2x6flww">🎥 Inclusive Design is Fast by Default</a></li>\n<li><a href="https://www.youtube.com/watch?v=7i_yQyHdxUo">🎥 The Psychology of Speed</a></li>\n<li><a href="https://www.youtube.com/watch?v=23Fp9V7w_8U&amp;ab_channel=KatieKovalcin">🎥 The Path to Performance</a></li>\n<li><a href="https://www.youtube.com/watch?v=DlG41ik4jKU&amp;ab_channel=ThisDotMedia">🎥 State of Web Performance August 2022</a></li>\n<li><a href="https://www.youtube.com/watch?v=_r62DZGyzU4&amp;ab_channel=Builder">🎥 Why performance is hard at scale</a></li>\n<li><a href="https://www.youtube.com/watch?v=JvJ0v5OohNg">🎥 When JavaScript Bytes</a></li>\n<li><a href="https://www.youtube.com/watch?v=ziL_E7WcKLE&amp;ab_channel=LondonWebPerformanceGroup">🎥 WebBundles – JS Delivery Without the Tradeoffs</a></li>\n<li><a href="https://www.youtube.com/watch?v=4LN78IeB-bY&amp;ab_channel=WeyWeyWeb">🎥 Web performance optimisations for the harsh conditions</a></li>\n</ul>\n<h2 id="why-matters">Why matters</h2>\n<ul>\n<li><a href="https://iamtk.co/why-web-performance">📝 Why Web Performance</a></li>\n<li><a href="https://csswizardry.com/downloads/csswizardry.com-site-speed.pdf">📝 What Is Site-Speed and Why Should I Care?</a></li>\n<li><a href="https://greensoftware.foundation/articles/how-to-measure-the-energy-consumption-of-your-frontend-application">📝 How to measure the energy consumption of your frontend application</a></li>\n<li><a href="https://web.dev/site-speed-and-business-metrics">📝 Relating site speed and business metrics</a></li>\n</ul>\n<h2 id="courses">Courses</h2>\n<ul>\n<li><a href="https://smashingconf.com/online-workshops/workshops/web-performance-harry-roberts">Web Performance Masterclass</a></li>\n<li><a href="https://www.alura.com.br/curso-online-otimizacao-performance-web">🇧🇷 Performance Web I: otimizando o front-end</a></li>\n<li><a href="https://www.alura.com.br/curso-online-performance-http2-critical-path">🇧🇷 Performance Web II: Critical Path, HTTP/2 e Resource Hints</a></li>\n</ul>\n</samp>\n',
  'performance-budget':
    '<samp>\n\n<h1 id="performance-budget">Performance Budget</h1>\n<ul>\n<li><a href="https://engineering.entelo.com/chromes-paint-flashing-tool-b5c880849635">📝 Chrome’s Paint Flashing Tool</a></li>\n<li><a href="https://medium.com/@addyosmani/start-performance-budgeting-dabde04cf6a3">📝 Start Performance Budgeting</a></li>\n<li><a href="https://web.dev/performance-budgets-101/">📝 Performance budgets 101</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Optimizing_startup_performance">📝 Optimizing startup performance</a></li>\n<li><a href="https://timkadlec.com/2013/01/setting-a-performance-budget/">📝 Setting a performance budget</a></li>\n<li><a href="https://clearleft.com/posts/responsive-design-on-a-budget">📝 Responsive Design on a Budget</a></li>\n<li><a href="https://tobias.is/blogging/web-performance-budgets-as-currency/">📝 Web Performance Budgets are more than mere thresholds</a></li>\n<li><a href="https://web.dev/user-centric-performance-metrics/">📝 User-centric performance metrics</a></li>\n<li><a href="https://rigor.com/blog/operationalizing-performance-budgets/">📝 Operationalizing Performance with Performance Budgets</a></li>\n<li><a href="https://v8.dev/blog/cost-of-javascript-2019">📝 The cost of JavaScript in 2019</a></li>\n<li><a href="https://csswizardry.com/2020/01/performance-budgets-pragmatically">📝 Performance Budgets, Pragmatically</a></li>\n<li><a href="https://www.youtube.com/watch?v=wGT9s6NW6hg&amp;ab_channel=GoogleChromeDevelopers">🎥 Core Web Vitals - Measure what matters</a></li>\n<li><a href="https://www.youtube.com/watch?v=63I-mEuSvGA">🎥 The Cost Of JavaScript</a></li>\n</ul>\n<h2 id="tools">Tools</h2>\n<ul>\n<li><a href="https://www.performancebudget.io">🛠 Performance Budget Calculator</a></li>\n<li><a href="https://perf-budget-calculator.firebaseapp.com">🛠 Performance Budget Calculator</a></li>\n<li><a href="https://browserdiet.com/calories">🛠 Browser Calories</a></li>\n</ul>\n</samp>\n',
  'measuring-performance':
    '<samp>\n\n<h1 id="measuring-performance">Measuring Performance</h1>\n<ul>\n<li><a href="https://calendar.perfplanet.com/2021/core-web-vitals-dashboard-on-google-analytics">📝 Core Web Vitals Dashboard On Google Analytics</a></li>\n<li><a href="https://dev.to/thegreengreek/show-me-the-money-justifying-performance-improvements-using-google-analytics-3231">📝 Show me the money: Justifying performance improvements using Google Analytics</a></li>\n<li><a href="https://medium.com/firebase-developers/how-fast-should-your-site-load-cfb14be48e8b">📝 How Fast Should Your Site Load?</a></li>\n<li><a href="https://dev.to/chromiumdev/a-step-by-step-guide-to-monitoring-the-competition-with-the-chrome-ux-report-4k1o">📝 A step by step guide to monitoring the competition with the Chrome UX Report</a></li>\n<li><a href="https://csswizardry.com/2018/05/identifying-auditing-discussing-third-parties/">📝 Identifying, Auditing, and Discussing Third Parties</a></li>\n<li><a href="https://www.nngroup.com/articles/response-times-3-important-limits">📝 Response Times: The 3 Important Limits</a></li>\n<li><a href="https://www.smashingmagazine.com/2015/10/rail-user-centric-model-performance">📝 Introducing RAIL: A User-Centric Model For Performance</a></li>\n<li><a href="https://techblog.wikimedia.org/2020/05/07/measuring-the-performance-of-wikipedia-visitors-devices">📝 Measuring the performance of Wikipedia visitors’ devices</a></li>\n<li><a href="https://calendar.perfplanet.com/2017/tracking-cpu-with-long-tasks-api">📝 Tracking CPU with Long Tasks API</a></li>\n<li><a href="https://bejamas.io/blog/guide-to-web-performance">📝 Complete guide to understand and measure the performance of your website</a></li>\n<li><a href="https://calibreapp.com/blog/react-performance-profiling-optimization">📝 React Performance Profiling Optimization</a></li>\n<li><a href="https://developer.chrome.com/docs/devtools/evaluate-performance">📝 Analyze runtime performance</a></li>\n<li><a href="https://aerotwist.com/blog/my-performance-audit-workflow">📝 My Performance Audit Workflow</a></li>\n<li><a href="https://nooshu.com/blog/2019/10/02/how-to-read-a-wpt-waterfall-chart">📝 How to read a WebPageTest Waterfall View chart</a></li>\n<li><a href="https://fershad.com/writing/start-performance-tests-your-browsers-address-bar/">📝 Start performance tests your browser&#39;s address bar</a></li>\n<li><a href="https://fershad.com/writing/testing-a-web-page-with-pagespeed-insights/">📝 Testing a web page with PageSpeed Insights</a></li>\n<li><a href="https://fershad.com/writing/tracking-real-core-web-vitals-scores/">📝 Tracking real Core Web Vitals scores</a></li>\n<li><a href="https://fershad.com/writing/stress-testing-site-performance/">📝 Stress testing site performance</a></li>\n<li><a href="https://www.smashingmagazine.com/2022/05/google-crux-analysis-comparison-performance-javascript-frameworks">📝 How To Use Google CrUX To Analyze And Compare The Performance Of JS Frameworks</a></li>\n<li><a href="https://3perf.com/blog/react-monitoring">📝 Get Fast, Stay Fast: How To Monitor React Render Performance</a></li>\n<li><a href="https://medium.com/airbnb-engineering/creating-airbnbs-page-performance-score-5f664be0936">📝 Creating Airbnb’s Page Performance Score</a></li>\n<li><a href="https://web.dev/crux-and-rum-differences">📝 Why is CrUX data different from my RUM data?</a></li>\n<li><a href="https://csswizardry.com/2022/08/measure-what-you-impact-not-what-you-influence">📝 Measure What You Impact, Not What You Influence</a></li>\n<li><a href="https://screenspan.net/blog/puppeteer-spof">📝 Testing Slow Third-Parties with Puppeteer</a></li>\n<li><a href="https://nooshu.com/blog/2019/12/30/how-to-read-a-wpt-connection-view-chart">📝 How to read a WebPageTest Connection View chart</a></li>\n<li><a href="https://medhatdawoud.net/blog/measuring-web-performance">📝 Measuring web performance, How fast is fast?</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/noise-canceling-rum">📝 Noise Canceling RUM</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/make-sense-of-flame-charts-in-performance-tab-by-example">📝 Make sense of flame charts in Performance Tab by example</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/visualize-your-resources-with-a-free-treemap-tool">📝 Visualize your resources with a free treemap tool</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/an-introduction-to-the-rum-archive">📝 An Introduction to the RUM Archive</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/the-rum-archive-and-benfords-law">📝 The RUM Archive and Benford’s Law</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/the-web-performance-engineers-swiss-army-knife">📝 The Web Performance Engineer’s Swiss Army Knife</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/web-performance-calendar-meets-rum">📝 Web Performance Calendar meets RUM</a></li>\n<li><a href="https://www.youtube.com/watch?v=yrWLi524YLM">🎥 Measuring Real User Performance in the Browser</a></li>\n<li><a href="https://www.youtube.com/watch?v=7CaEESxbu2s&amp;ab_channel=EtsyEng">🎥 Crafting Performance Alerting Tools</a></li>\n<li><a href="https://vimeo.com/254834890">🎥 How’s the UX on the Web, Really?</a></li>\n<li><a href="https://www.youtube.com/watch?v=Nl2Q9JAdha8">🎥 Web Performance Auditing</a></li>\n<li><a href="https://www.youtube.com/watch?v=e215_uiU3LQ">🎥 One Number, Multiple Metrics</a></li>\n<li><a href="https://www.youtube.com/watch?v=DMM4kTA5nAc">🎥 Observability for Web Perf</a></li>\n<li><a href="https://www.youtube.com/watch?v=cXLOIIJ1UaE">🎥 From Milliseconds to Millions: The Numbers Driving Web Perf</a></li>\n<li><a href="https://www.youtube.com/watch?v=3xWAqTIhDQ0&amp;ab_channel=NYWebPerformanceMeetup">🎥 Let’s Turn Real User Data Analysis into a Science</a></li>\n<li><a href="https://www.youtube.com/watch?v=QLenZnWMjLw&amp;ab_channel=NYWebPerformanceMeetup">🎥 Analyze and Improve web performance using devtools &amp; webpagetest</a></li>\n<li><a href="https://www.youtube.com/watch?v=dfCdKJC9RLQ">🎥 Profiling performance with Harry Roberts</a></li>\n<li><a href="https://www.youtube.com/watch?v=hr9E1D7gRHs&amp;ab_channel=KevinFarrugia">🎥 Measuring Performance with SpeedCurve &amp; WPT</a></li>\n<li><a href="https://www.youtube.com/watch?v=95fTqkcna4g">🎥 How to make sense of real user performance metrics (RUM)</a></li>\n</ul>\n<h2 id="runtime-performance">Runtime Performance</h2>\n<ul>\n<li><a href="https://github.com/unlikelyzero/js-perf-toolkit">🛠 A collection of performance tools</a></li>\n<li><a href="https://www.youtube.com/watch?v=IrK-XDH72bw&amp;ab_channel=NYWebPerformanceMeetup">🎥 Performance Testing using Playwright</a></li>\n</ul>\n<h2 id="devtools">DevTools</h2>\n<ul>\n<li><a href="https://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html">📝 CPU Flame Graphs</a></li>\n<li><a href="https://www.debugbear.com/blog/chrome-devtools-network-throttling">📝 Network Throttling in Chrome DevTools</a></li>\n<li><a href="https://www.youtube.com/watch?v=LGT4Qe7v0So">🎥 Chrome DevTools: Performance Tab</a></li>\n<li><a href="https://www.youtube.com/watch?v=yRrrL0Mg1pM&amp;ab_channel=UmarHansa">🎥 Improving page performance with Chrome DevTools</a></li>\n<li><a href="https://www.youtube.com/watch?v=D_M7LvDvlSg&amp;ab_channel=UmarHansa">🎥 Making images lazy load with Chrome DevTools</a></li>\n<li><a href="https://www.youtube.com/watch?v=WRwxOonOYK0&amp;ab_channel=UmarHansa">🎥 Exploring the Frontend Performance of the National Rail Website with Chrome DevTools</a></li>\n<li><a href="https://www.youtube.com/watch?v=E4KAWf_fKbM&amp;ab_channel=UmarHansa">🎥 Running a performance profile on the YouTube search box</a></li>\n<li><a href="https://www.youtube.com/watch?v=8-pkB2vGUKk&amp;ab_channel=UmarHansa">🎥 Understanding Paint Performance with Chrome DevTools</a></li>\n<li><a href="https://www.youtube.com/watch?v=LaxbdIyBkL0&amp;ab_channel=GoogleDevelopers">🎥 Memory Management Masterclass</a></li>\n</ul>\n<h2 id="how-to-metric">How to metric</h2>\n<ul>\n<li><a href="https://medium.com/@djsmith42/how-to-metric-edafaf959fc7">📝 How to metric</a></li>\n<li><a href="https://support.speedcurve.com/docs/how-to-read-a-histogram">📝 How to read a RUM histogram</a></li>\n<li><a href="https://raygun.com/learn/what-is-real-user-monitoring">📝 What is Real User Monitoring? RUM explained</a></li>\n<li><a href="https://support.speedcurve.com/docs/synthetic-vs-real-user-monitoring-rum">📝 Synthetic vs. real user monitoring</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/faster-data-visualizations">📝 Faster data visualizations</a></li>\n</ul>\n<h2 id="benchmark">Benchmark</h2>\n<ul>\n<li><a href="https://tomdale.net/2017/07/adventures-in-microbenchmarking">🛠 Adventures in Microbenchmarking</a></li>\n<li><a href="https://github.com/Polymer/tachometer">🛠 Tachometer</a></li>\n<li><a href="https://github.com/tinylibs/tinybench">🛠 tinybench</a></li>\n<li><a href="https://github.com/Rowno/react-benchmark">🛠 react-benchmark</a></li>\n</ul>\n<h2 id="tools">Tools</h2>\n<ul>\n<li><a href="https://treo.sh">🛠 Treo</a></li>\n<li><a href="https://addyosmani.com/blog/puppeteer-recipes">📝 Web Performance Recipes With Puppeteer</a></li>\n<li><a href="https://github.com/perfsee/perfsee">🛠 perfsee: a set of tool for measuring and debugging performance of frontend applications</a></li>\n<li><a href="https://github.com/jlfwong/speedscope">🛠 speedscope</a></li>\n<li><a href="https://github.com/akamai/boomerang">🛠 boomerang</a></li>\n</ul>\n</samp>\n',
  'core-web-vitals':
    '<samp>\n\n<h1 id="core-web-vitals">Core Web Vitals</h1>\n<ul>\n<li><a href="https://web.dev/top-cwv-2023">📝 Our top Core Web Vitals recommendations for 2023</a></li>\n<li><a href="https://web.dev/patterns/web-vitals-patterns">📝 Web Vitals patterns</a></li>\n<li><a href="https://simonhearne.com/2021/core-web-vitals-seo">📝 Everything we know about Core Web Vitals and SEO</a></li>\n<li><a href="https://web.dev/vitals-spa-faq">📝 How SPA architectures affect Core Web Vitals</a></li>\n<li><a href="https://discuss.httparchive.org/t/lighthouse-scores-as-predictors-of-page-level-crux-data/2232">📝 Lighthouse scores as predictors of page-level CrUX data</a></li>\n<li><a href="https://web.dev/vitals-field-measurement-best-practices/">📝 Best practices for measuring Web Vitals in the field</a></li>\n<li><a href="https://simonhearne.com/2020/core-web-vitals">📝 How to Improve Core Web Vitals</a></li>\n<li><a href="https://www.smashingmagazine.com/2021/12/core-web-vitals-case-study-smashing-magazine">📝 Improving Core Web Vitals, A Smashing Magazine Case Study</a></li>\n<li><a href="https://calendar.perfplanet.com/2021/hands-on-with-the-new-responsiveness-metrics">📝 Hands On with the new Responsiveness Metrics</a></li>\n<li><a href="https://calendar.perfplanet.com/2021/have-core-web-vitals-made-the-web-faster">📝 Have Core Web Vitals made the web faster?</a></li>\n<li><a href="https://developers.google.com/search/blog/2021/11/bringing-page-experience-to-desktop">📝 CWV will become a desktop ranking factor in February 2022</a></li>\n<li><a href="https://groups.google.com/g/web-vitals-feedback">📝 Send feedback to the Google Core Web Vitals Team</a></li>\n<li><a href="https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/speed/metrics_changelog/README.md">📝 Core Web Vitals Changelog</a></li>\n<li><a href="https://github.com/fabkrum/core-web-vitals-optimizer/blob/main/README.md">📝 Core Web Vitals Optimizer (proven process &amp; open-source tool)</a></li>\n<li><a href="https://web.dev/patterns/web-vitals-patterns">📝 Web Vitals patterns</a></li>\n<li><a href="https://www.sistrix.com/blog/core-web-vitals-is-a-measurable-ranking-factor">📝 Core Web Vitals is a Measurable Ranking Factor</a></li>\n<li><a href="https://web.dev/lab-and-field-data-differences">📝 Why lab and field data can be different (and what to do about it)</a></li>\n<li><a href="https://web.dev/vitals-tools-workflow">📝 A performance-focused workflow based on Google tools</a></li>\n<li><a href="https://httparchive.org/reports/chrome-ux-report">📝 HTTP Archive: CrUX Report</a></li>\n<li><a href="https://dev.to/rick_viscomi/simulating-real-users-in-the-lab-to-debug-cls-issues-3hnp">📝 Simulating real users in the lab to debug CLS issues</a></li>\n<li><a href="https://web.dev/better-responsiveness-metric">📝 Towards a better responsiveness metric</a></li>\n<li><a href="https://contentsquare.com/blog/the-dos-and-donts-of-core-web-vitals-with-iprospect">📝 The do’s and don’ts of Core Web Vitals</a></li>\n<li><a href="https://developers.google.com/search/blog/2021/04/more-details-page-experience">📝 More time, tools, and details on the page experience update</a></li>\n<li><a href="https://web.dev/css-web-vitals">📝 CSS for Web Vitals</a></li>\n<li><a href="https://wpostats.com/tags/core%20web%20vitals">📝 Business impact of Core Web Vital optimizations</a></li>\n<li><a href="https://bigcommerce.websiteadvantage.com.au/core-web-vitals-ga4-bigquery-data-studio">📝 Core Web Vitals Tracking via GA4, BigQuery and Google Data Studio</a></li>\n<li><a href="https://www.netcentric.biz/insights/2021/05/core-web-vitals.html">📝 Core Web Vitals – The Final Countdown</a></li>\n<li><a href="https://github.com/fabkrum/web-performance-resources/blob/master/crux-page-data.md">📝 How to get your page Core Web Vitals from the CrUX API</a></li>\n<li><a href="https://web.dev/optimize-vitals-lighthouse">📝 Optimizing Web Vitals using Lighthouse</a></li>\n<li><a href="https://developers.google.com/search/blog/2021/04/more-details-page-experience">📝 More time, tools, and details on the page experience update</a></li>\n<li><a href="https://www.smashingmagazine.com/2021/04/complete-guide-measure-core-web-vitals">📝 An In-Depth Guide To Measuring Core Web Vitals</a></li>\n<li><a href="https://web.dev/debug-web-vitals-in-the-field">📝 Debug Web Vitals in the field</a></li>\n<li><a href="https://blr.design/blog/cookie-banner-web-vitals">📝 Cookie Banners and Web Vitals</a></li>\n<li><a href="https://www.deepcrawl.com/blog/best-practice/cmpetitive-analysis-core-web-vitals-google-data-studio">📝 How to create a competitive analysis dashboard for Core Web Vitals using Google Data Studio</a></li>\n<li><a href="https://simonhearne.com/2021/core-web-vitals-seo">📝 Everything we know about Core Web Vitals and SEO</a></li>\n<li><a href="https://calendar.perfplanet.com/2020/analyzing-web-vitals-with-webpagetest">📝 Analyzing Web Vitals with WebPageTest</a></li>\n<li><a href="https://simonhearne.com/2020/core-web-vitals">📝 How to Improve Core Web Vitals</a></li>\n<li><a href="https://web.dev/vitals">📝 Web Vitals - Essential metrics for a healthy site</a></li>\n<li><a href="https://web.dev/defining-core-web-vitals-thresholds">📝 Defining the Core Web Vitals metrics thresholds</a></li>\n<li><a href="https://blog.chromium.org/2020/05/the-science-behind-web-vitals.html">📝 The Science Behind Web Vitals</a></li>\n<li><a href="https://developers.google.com/search/blog/2020/05/evaluating-page-experience">📝 Evaluating page experience for a better web</a></li>\n<li><a href="https://web.dev/responsiveness">📝 Feedback wanted: An experimental responsiveness metric</a></li>\n<li><a href="https://web.dev/smoothness">📝 Towards an animation smoothness metric</a></li>\n<li><a href="https://developer.chrome.com/blog/early-hints">📝 Faster page loads using server think-time with Early Hints</a></li>\n<li><a href="https://www.speedcurve.com/blog/element-timing-one-true-metric">📝 Element Timing: One true metric to rule them all?</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/making-a-new-web-vital-metric">📝 What goes into making a new Web Vital metric</a></li>\n<li><a href="https://simonhearne.com/2022/core-web-vitals-on-spas">📝 Optimising Core Web Vitals on SPAs</a></li>\n<li><a href="https://estelafranco.com/blog/spa-cwv/">📝 How to measure CWVs on SPAs</a></li>\n<li><a href="https://www.youtube.com/watch?v=AQqFZ5t8uNc&amp;ab_channel=GoogleChromeDevelopers">🎥 Optimize for Core Web Vitals</a></li>\n<li><a href="https://www.youtube.com/watch?v=iNfz9tg-wyg">🎥 Exploring the future of Core Web Vitals</a></li>\n<li><a href="https://www.youtube.com/watch?v=CcHCbFhx2UM">🎥 Insight into Core Web Vitals from the Chrome Platform Team</a></li>\n<li><a href="https://www.youtube.com/watch?v=XxvHY4wC8Co">🎥 What&#39;s new in Web Vitals</a></li>\n<li><a href="http://youtube.com/watch?v=nPmAE0YjGK0">🎥 The business impact of Core Web Vitals</a></li>\n<li><a href="https://www.youtube.com/watch?v=HWm6WNkHs90&amp;t=615s">🎥 Ask Me Anything - Core Web Vitals</a></li>\n<li><a href="https://www.youtube.com/watch?v=9RpREJjoeRI">🎥 Measuring Core Web Vitals</a></li>\n<li><a href="https://www.youtube.com/watch?v=AQqFZ5t8uNc">🎥 Optimize for Core Web Vitals</a></li>\n<li><a href="https://www.youtube.com/watch?v=ctavZT87syI">🎥 Lessons learned from performance monitoring in Chrome</a> (<a href="https://www.slideshare.net/AnnieSullivan9/mnitoring-and-metrics-in-chrome-196438420">Slides</a>)</li>\n<li><a href="https://www.youtube.com/watch?v=tDc77Y9HFoA&amp;ab_channel=CreatorbyZmags">🎥 Website Performance and Core Web Vitals</a></li>\n</ul>\n<h2 id="cumulative-layout-shift-cls">Cumulative Layout Shift (CLS)</h2>\n<ul>\n<li><a href="https://levelup.gitconnected.com/improving-cumulative-layout-shift-on-pre-deploy-stage-1636fb1386cc">📝 How I removed website layout shift using a predeploy script</a></li>\n<li><a href="https://requestmetrics.com/web-performance/cumulative-layout-shift">📝 Measuring Cumulative Layout Shift</a></li>\n<li><a href="https://www.smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/">📝 How To Fix Cumulative Layout Shift (CLS) Issues</a></li>\n<li><a href="https://nicj.net/cumulative-layout-shift-in-the-real-world">📝 Cumulative Layout Shift in the Real World</a></li>\n<li><a href="https://nicj.net/cumulative-layout-shift-in-practice">📝 Cumulative Layout Shift in Practice</a></li>\n<li><a href="https://tech.buzzfeed.com/improving-cumulative-layout-shift-at-buzzfeed-part-1-8b7ead2381dd">📝 CLS at BuzzFeed — Part 1: Raising The Floor</a></li>\n<li><a href="https://tech.buzzfeed.com/improving-cumulative-layout-shift-at-buzzfeed-part-2-2a846adeb097">📝 CLS at BuzzFeed — Part 2: Getting Help From Real Users</a></li>\n<li><a href="https://tech.buzzfeed.com/improving-cumulative-layout-shift-at-buzzfeed-part-2-2a846adeb097">📝 CLS at BuzzFeed — Part 3: Dealing with the unpredictable</a></li>\n<li><a href="https://www.bram.us/2021/07/23/pevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/">📝 Prevent unwanted Layout Shifts caused by Scrollbars with the scrollbar-gutter CSS property</a></li>\n<li><a href="https://web.dev/telegraph/">📝 Improving Cumulative Layout Shift at Telegraph Media Group</a></li>\n<li><a href="https://www.smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/">📝 How To Fix Cumulative Layout Shift (CLS) Issues</a></li>\n<li><a href="https://calibreapp.com/blog/cumulative-layout-shift">📝 Cumulative Layout Shift: Measure and Avoid Visual Instability</a></li>\n<li><a href="https://jessbpeck.com/posts/completecls/">📝 The Almost-Complete Guide to Cumulative Layout Shift</a></li>\n<li><a href="https://blog.webpagetest.org/posts/understanding-the-new-cumulative-layout-shift/">📝 Diving Into the New Cumulative Layout Shift</a></li>\n<li><a href="https://web.dev/evolving-cls/">📝 Evolving the CLS metric</a></li>\n<li><a href="https://nicj.net/cumulative-layout-shift-in-practice/">📝 Cumulative Layout Shift in Practice</a></li>\n<li><a href="https://nicj.net/cumulative-layout-shift-in-the-real-world/">📝 Cumulative Layout Shift in the Real World</a></li>\n<li><a href="https://www.seoclarity.net/blog/core-web-vitals-study">📝 Cumulative Layout Shift Study of Over 1 Million Websites</a></li>\n<li><a href="https://web.dev/debug-layout-shifts/">📝 Debug layout shifts</a></li>\n<li><a href="https://docs.google.com/document/d/1H-LiSW_oUzugtu_YLXAzxgJkiEcr4bU3qpw84zFUsCQ/edit?resourcekey=0-pKSNORFdLG9lgpOKwSwXFA#heading=h.b9ipz2aa3niy">📝 Debugging CLS</a></li>\n<li><a href="https://www.youtube.com/watch?v=zIJuY-JCjqw">🎥 Understanding Cumulative Layout Shift</a></li>\n</ul>\n<h2 id="largest-contentful-paint-lcp">Largest Contentful Paint (LCP)</h2>\n<ul>\n<li><a href="https://web.dev/optimize-lcp/">📝 Optimize Largest Contentful Paint</a></li>\n<li><a href="https://requestmetrics.com/web-performance/largest-contentful-paint">📝 Measuring Largest Contentful Paint</a></li>\n<li><a href="https://web.dev/vodafone/">📝 Case Study Vodafone: A 31% improvement in LCP increased sales by 8%</a></li>\n<li><a href="https://csswizardry.com/2022/03/optimising-largest-contentful-paint">📝 Optimising Largest Contentful Paint</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/lcpfe">📝 LCP(FE)</a></li>\n<li><a href="https://web.dev/fetch-priority">📝 Optimizing resource loading with the Fetch Priority API</a></li>\n<li><a href="https://imkev.dev/fetchpriority-opportunity">📝 Priority Hints and optimizing LCP</a></li>\n<li><a href="https://philipwalton.com/articles/dynamic-lcp-priority">📝 Dynamic LCP Priority: Learning from Past Visits</a></li>\n<li><a href="https://paulcalvano.com/2021-06-07-lcp-httparchive">📝 What can the HTTP Archive tell us about Largest Contentful Paint?</a></li>\n<li><a href="https://addyosmani.com/blog/fetch-priority">📝 Tip - Use fetchpriority=high to load your LCP hero image sooner</a></li>\n<li><a href="https://evanxmerz.com/post/how-to-optimize-largest-contentful-paint-lcp-on-client-side">📝 How to optimize largest contentful paint (LCP) on client side</a></li>\n<li><a href="https://performance.shopify.com/blogs/blog/improve-largest-contentful-paint-lcp-by-removing-image-transitions">📝 Improve Largest Contentful Paint (LCP) by removing image transitions</a></li>\n<li><a href="https://murshidmuzamil.com/blog/understanding-lcp-browsers">📝 Understanding How Browsers Identify the LCP Element</a></li>\n<li><a href="https://www.youtube.com/watch?v=YMqnPeZHcuc">🎥 This Is Your LCP On Images</a></li>\n<li><a href="https://www.youtube.com/watch?v=diAc65p15ag">🎥 Investigating LCP: Largest Contentful Paint</a></li>\n<li><a href="https://www.youtube.com/watch?v=480m72yjZv8">🎥 How to improve Largest Contentful Paint for a better page experience</a></li>\n</ul>\n<h2 id="first-input-delay-fid">First Input Delay (FID)</h2>\n<ul>\n<li><a href="https://web.dev/fid">📝 First Input Delay (FID)</a></li>\n<li><a href="https://nolanlawson.com/2021/08/08/improving-responsiveness-in-text-inputs/">📝 Improving responsiveness in text inputs</a></li>\n<li><a href="https://philipwalton.com/articles/idle-until-urgent/">📝 Idle Until Urgent</a></li>\n</ul>\n<h2 id="interaction-to-next-paint-inp">Interaction to Next Paint (INP)</h2>\n<ul>\n<li><a href="https://imkev.dev/inp">📝 Interaction to Next Paint by kev</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/breaking-up-long-tasks">📝 Breaking up long tasks</a></li>\n<li><a href="https://web.dev/optimize-inp">📝 Optimize Interaction to Next Paint</a></li>\n<li><a href="https://www.iron-out.io/blog/how-to-solve-interaction-to-next-paint-issues">📝 How to solve Interaction to Next Paint (INP) issues</a></li>\n<li><a href="https://www.youtube.com/watch?v=Mizzbsvv8Os&amp;ab_channel=GoogleChromeDevelopers">🎥 The state of responsiveness on the web</a></li>\n<li><a href="https://www.youtube.com/watch?v=zQBt64Q-Ijs&amp;ab_channel=BlinkOn">🎥 Interaction to Next Paint and other Web Vitals [BlinkOn 16]</a></li>\n<li><a href="https://www.youtube.com/watch?v=JXaIFLhRV8Q&amp;ab_channel=CodeSpaceITeducation">🎥 Interaction to Next Paint</a></li>\n<li><a href="https://www.youtube.com/watch?v=bDJB-AQDciE">🎥 Digging into Interaction to Next Paint</a></li>\n<li><a href="https://www.youtube.com/watch?v=KZ1kxzsJZ5g&amp;ab_channel=GoogleChromeDevelopers">🎥 How to optimize web responsiveness with Interaction to Next Paint</a></li>\n<li><a href="https://www.youtube.com/watch?v=BoaORHnJYAE">🎥 Understanding and Optimizing Interaction to Next Paint (INP)</a></li>\n</ul>\n<h2 id="total-blocking-time">Total Blocking Time</h2>\n<ul>\n<li><a href="https://calibreapp.com/blog/total-blocking-time">📝 Total Blocking Time: A Short and Sweet Guide for Happier Users</a></li>\n</ul>\n</samp>\n',
  browser:
    '<samp>\n\n<h1 id="browser">Browser</h1>\n<ul>\n<li><a href="https://www.kuniga.me/blog/2020/03/28/browser-performance.html">📝 Browser Performance</a></li>\n<li><a href="https://www.kuniga.me/blog/2015/10/09/notes-on-how-browsers-work.html">📝 Notes on how browsers work</a></li>\n<li><a href="https://www.kuniga.me/blog/2015/06/07/notes-on-javascript-memory-profiling-in-google-chrome.html">📝 Notes on Javascript Memory Profiling in Google Chrome</a></li>\n<li><a href="https://www.kuniga.me/blog/2017/06/01/notes-on-javascript-interpreters.html">📝 Notes on JavaScript Interpreters</a></li>\n<li><a href="https://www.kuniga.me/blog/2016/08/04/web-workers.html">📝 Web Workers</a></li>\n<li><a href="https://dev.to/addyosmani/adaptive-serving-using-javascript-and-the-network-information-api-331p">📝 Adaptive Serving using JavaScript and the Network Information API</a></li>\n<li><a href="https://nooshu.com/blog/2021/03/14/setting-up-cloudflare-workers-for-web-performance-optimisation-and-testing/">📝 Setting up Cloudflare Workers for web performance optimisation and testing</a></li>\n<li><a href="https://alistapart.com/article/now-thats-what-i-call-service-worker/">📝 Now THAT’S What I Call Service Worker!</a></li>\n<li><a href="https://philipwalton.com/articles/smaller-html-payloads-with-service-workers/">📝 Smaller HTML Payloads with Service Workers</a></li>\n<li><a href="https://browser.engineering">📝 Web Browser Engineering</a></li>\n<li><a href="https://blog.sessionstack.com/how-javascript-works-deep-dive-into-websockets-and-http-2-with-sse-how-to-pick-the-right-path-584e6b8e3bf7?source=collection_home---4------0----------------">📝 How JavaScript works: Deep dive into WebSockets and HTTP/2 with SSE + how to pick the right path</a></li>\n<li><a href="https://blog.sessionstack.com/how-javascript-works-a-comparison-with-webassembly-why-in-certain-cases-its-better-to-use-it-d80945172d79">📝 How JavaScript works: A comparison with WebAssembly + why in certain cases it’s better to use it over JavaScript</a></li>\n<li><a href="https://blog.sessionstack.com/how-javascript-works-the-building-blocks-of-web-workers-5-cases-when-you-should-use-them-a547c0757f6a">📝 How JavaScript works: The building blocks of Web Workers + 5 cases when you should use them</a></li>\n<li><a href="https://docs.google.com/document/d/1nu0EcVNC3jtmUVWL8Gs5eCj2p_984kamNhG2nS9gOC0/edit#">📝 Conclusions from Off Main Thread &amp; Worker Exploration</a></li>\n<li><a href="https://web.dev/off-main-thread">📝 Use web workers to run JavaScript off the browser&#39;s main thread</a></li>\n<li><a href="https://jonathandinu.com/blog/accelerating-js/">📝 Accelerating JavaScript (in the browser)</a></li>\n<li><a href="https://nolanlawson.com/2021/02/23/javascript-performance-beyond-bundle-size">📝 JavaScript performance beyond bundle size</a></li>\n<li><a href="https://fershad.com/writing/cloudflare-workers-inline-external-css/">📝 Using Cloudflare Workers to inline external CSS</a></li>\n<li><a href="https://fershad.com/writing/proxy-cloudinary-with-cloudflare-workers/">📝 Proxying Cloudinary image requests with Cloudflare Workers</a></li>\n<li><a href="https://fershad.com/writing/dynamic-page-content-with-cloudflare-workers/">📝 Dynamic page content with Cloudflare Workers</a></li>\n<li><a href="https://www.builder.io/blog/how-we-cut-99-percent-js-with-qwik-and-partytown">📝 How we cut 99% of our JavaScript with Qwik + Partytown</a></li>\n<li><a href="https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp">📝 Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker</a></li>\n<li><a href="https://web.dev/preload-scanner">📝 Don&#39;t fight the browser preload scanner</a></li>\n<li><a href="https://medium.com/@matthew.costello/frontend-web-performance-the-essentials-0-61fea500b180">📝 Frontend Web Performance: The Essentials 0</a></li>\n<li><a href="https://medium.com/@matthew.costello/frontend-web-performance-the-essentials-1-cb6513e1c3a1">📝 Frontend Web Performance: The Essentials 1</a></li>\n<li><a href="https://dev.to/gopal1996/understanding-reflow-and-repaint-in-the-browser-1jbg">📝 Understanding Reflow and Repaint in the browser</a></li>\n<li><a href="https://surma.dev/things/when-workers">📝 When should you be using Web Workers?</a></li>\n<li><a href="http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow">📝 reflows &amp; repaints: css performance making your javascript slow?</a></li>\n<li><a href="https://gist.github.com/paulirish/5d52fb081b3570c81e3a">📝 What forces layout / reflow</a></li>\n<li><a href="https://www.phpied.com/rendering-repaint-reflowrelayout-restyle">📝 Rendering: repaint, reflow/relayout, restyle</a></li>\n<li><a href="https://blog.atomrc.dev/p/js-performance-profiling">📝 Get to know your browser&#39;s performance profiler</a></li>\n<li><a href="https://web.dev/speed-scrolling">📝 Scrolling performance</a></li>\n<li><a href="https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing">📝 Avoiding layout thrashing — Web Fundamentals</a></li>\n<li><a href="https://mattandre.ws/2014/05/really-fixing-layout-thrashing/">📝 Fixing Layout thrashing in the real world | Matt Andrews</a></li>\n<li><a href="http://wilsonpage.co.uk/preventing-layout-thrashing/">📝 Preventing &apos;layout thrashing&apos; | Wilson Page</a></li>\n<li><a href="https://github.com/wilsonpage/fastdom">📝 wilsonpage/fastdom</a></li>\n<li><a href="http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/">📝 Rendering: repaint, reflow/relayout, restyle / Stoyan</a></li>\n<li><a href="http://blog.fogcreek.com/we-spent-a-week-making-trello-boards-load-extremely-fast-heres-how-we-did-it/">📝 We spent a week making Trello boards load extremely fast. Here’s how we did it. - Fog Creek Blog</a></li>\n<li><a href="https://developers.google.com/speed/articles/reflow?hl=en">📝 Minimizing browser reflow | PageSpeed Insights | Google Developers</a></li>\n<li><a href="https://developer.apple.com/videos/wwdc/2012/?id=601">📝 Optimizing Web Content in UIWebViews and Websites on iOS</a></li>\n<li><a href="http://www.html5rocks.com/en/tutorials/speed/layers/">📝 Accelerated Rendering in Chrome</a></li>\n<li><a href="https://www.diva-portal.org/smash/get/diva2:1436661/FULLTEXT01.pdf">📝 JavaScript DOM Manipulation Performance</a></li>\n<li><a href="https://www.iamtk.co/profiling-and-optimizing-the-runtime-performance-with-the-devtools-performance-tab">📝 Profiling &amp; Optimizing the runtime performance with the DevTools Performance tab</a></li>\n<li><a href="https://blog.webpagetest.org/posts/removing-unused-preloads-on-festival-foods">📝 Improving Paint Metrics by Removing Unused Preloads</a></li>\n<li><a href="https://www.debugbear.com/blog/render-blocking-resources">📝 How to eliminate render blocking resources</a></li>\n<li><a href="https://engineering.flipboard.com/2015/02/mobile-web">📝 60 fps on the mobile web</a></li>\n<li><a href="https://medium.com/jspoint/how-the-browser-renders-a-web-page-dom-cssom-and-rendering-df10531c9969">📝 How the browser renders a web page? — DOM, CSSOM, and Rendering</a></li>\n<li><a href="http://webkithacks.github.io/webkit_presentations/architecture">📝 WebKit Architecture</a></li>\n<li><a href="https://helgeklein.com/blog/modern-multi-process-browser-architecture">📝 Modern Multi-Process Browser Architecture</a></li>\n<li><a href="https://medhatdawoud.net/blog/what-makes-the-web-slow">📝 What makes the web slow? browser&#39;s bottleneck</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/so-you-heard-of-client-hints-and-you-think-you-got-time-right-wrong">📝 So you heard of Client-Hints and you think you got time, right? Wrong</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/fast-is-good-instant-is-better">📝 Fast is good, instant is better!</a></li>\n<li><a href="https://developer.chrome.com/blog/prerender-pages">📝 Prerender pages in Chrome for instant page navigations</a></li>\n<li><a href="https://github.com/whatwg/html/pull/8470">📝 Add the Priority Hints changes to the html spec</a></li>\n<li><a href="https://www.youtube.com/watch?v=7Rrv9qFMWNM">🎥 The main thread is overworked &amp; underpaid</a></li>\n<li><a href="https://www.youtube.com/watch?v=mDdgfyRB5kg">🎥 Scheduling On and Off the Main Thread</a></li>\n<li><a href="https://www.youtube.com/watch?v=l2DHjRmgAF8&amp;ab_channel=Nordic.js">🎥 WebAssembly as cross-platform architecture</a></li>\n<li><a href="https://www.smashingmagazine.com/2019/04/webassembly-speed-web-app/">🎥 How We Used WebAssembly To Speed Up Our Web App By 20X (Case Study)</a></li>\n<li><a href="https://www.youtube.com/watch?v=rpNXWxMyzHQ&amp;ab_channel=IlyaGrigorik">🎥 Delivering 60 FPS in the browser</a></li>\n<li><a href="https://www.youtube.com/watch?v=4CWzB5Mi3Ik">🎥 Getting Out Of Users&#39; Way: Less Jank With Web Workers</a></li>\n<li><a href="https://www.youtube.com/watch?v=PkOBnYxqj3k&amp;ab_channel=IlyaGrigorik">🎥 Critical rendering path - Crash course on web performance</a></li>\n<li><a href="https://www.youtube.com/watch?v=YV1nKLWoARQ&amp;ab_channel=IlyaGrigorik">🎥 Optimizing the Critical Rendering Path for Instant Mobile Websites</a></li>\n<li><a href="https://www.youtube.com/watch?v=rpNXWxMyzHQ&amp;t=1s&amp;ab_channel=IlyaGrigorik">🎥 Delivering 60 FPS in the browser</a></li>\n<li><a href="https://www.youtube.com/watch?v=etACK2qbHfc&amp;ab_channel=IlyaGrigorik">🎥 There is a client-side proxy (ServiceWorker) in your browser</a></li>\n<li><a href="https://www.youtube.com/watch?v=cCOL7MC4Pl0&amp;ab_channel=JSConf">🎥 In The Loop - setTimeout, micro tasks, requestAnimationFrame, requestIdleCallback</a></li>\n<li><a href="https://www.youtube.com/watch?v=fccw0kmsG6g&amp;ab_channel=ReactNext">🎥 Cache Control</a></li>\n<li><a href="https://www.youtube.com/watch?v=utxTqssjp-o&amp;ab_channel=GoogleChromeDevelopers">🎥 Cache your fonts, images &amp; pages - Unpacking the Workbox</a></li>\n<li><a href="https://www.youtube.com/watch?v=n1cKlKM3jYI&amp;ab_channel=UmarHansa">🎥 An Introduction to Browser Rendering</a></li>\n<li><a href="https://www.youtube.com/watch?v=MHyAOZ45vnU">🎥 Get Your &quot;head&quot; Straight</a></li>\n</ul>\n<h2 id="service-workers--workers">Service Workers / Workers</h2>\n<ul>\n<li><a href="https://github.com/GoogleChrome/workbox">📝 Workbox: JavaScript libraries for Progressive Web Apps</a></li>\n<li><a href="https://developer.chrome.com/docs/workbox/service-worker-overview/">📝 Introduction to Workbox and service workers</a></li>\n<li><a href="https://web.dev/service-worker-caching-and-http-caching">📝 Service worker caching and HTTP caching</a></li>\n<li><a href="https://www.smashingmagazine.com/2022/04/partytown-eliminates-website-bloat-third-party-apps">📝 How Partytown Eliminates Website Bloat From Third-Party Scripts</a></li>\n<li><a href="https://nooshu.com/blog/2021/03/14/setting-up-cloudflare-workers-for-web-performance-optimisation-and-testing">📝 Setting up Cloudflare Workers for web performance optimisation and testing</a></li>\n<li><a href="https://nooshu.com/blog/2021/03/02/cloudflare-worker-recipes-for-frontend-performance-testing">📝 Cloudflare Worker recipes for frontend performance testing</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/get-off-the-main-thread-with-an-inline-web-worker-an-example">📝 Get off the main thread with an inline web worker: an example</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/making-the-web-faster-with-service-workers-and-performance-research">📝 Making the Web Faster with Service Workers and Performance Research</a></li>\n<li><a href="https://www.youtube.com/watch?v=AsZXN8SYoa4&amp;ab_channel=Builder">🎥 Boost Your Site Performance with Partytown</a></li>\n<li><a href="https://www.youtube.com/watch?v=yEtT0C4vsRM&amp;ab_channel=Builder">🎥 Speed Up Your Site with Workers</a></li>\n<li><a href="https://partytown.builder.io">🛠 Partytown</a></li>\n</ul>\n<h2 id="rendering-engines">Rendering Engines</h2>\n<ul>\n<li><a href="https://developer.chrome.com/articles/renderingng">📝 RenderingNG: the new rendering engine of chrome</a></li>\n<li><a href="https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank">📝 The whole web at maximum FPS: How WebRender gets rid of jank</a></li>\n<li><a href="https://philipwalton.com/articles/why-web-developers-need-to-care-about-interactivity/">📝 Why Web Developers Need to Care about Interactivity</a></li>\n<li><a href="https://www.youtube.com/watch?v=K2QHdgAKP-s">🎥 Life of a Pixel</a></li>\n<li><a href="https://www.youtube.com/watch?v=BfMWAIc0xSU&amp;ab_channel=Front-Trends">🎥 Rendering performance inside out</a></li>\n<li><a href="https://www.youtube.com/watch?v=5nmpokoRaZI&amp;ab_channel=JSConf">🎥 JavaScript Engines: The Good Parts</a></li>\n</ul>\n<h2 id="courses">Courses</h2>\n<ul>\n<li><a href="https://www.udacity.com/course/website-performance-optimization--ud884">Website Performance Optimization</a></li>\n<li><a href="https://csswizardry.gumroad.com/l/perfect-devtools">Setting up DevTools for Performance Testing</a></li>\n<li><a href="https://moderndevtools.com">Modern DevTools</a></li>\n<li><a href="https://classroom.udacity.com/courses/ud860">Browser Rendering Optimization</a></li>\n<li><a href="https://classroom.udacity.com/courses/ud884">Website Performance Optimization</a></li>\n<li><a href="https://classroom.udacity.com/courses/ud117">JavaScript and the DOM</a></li>\n</ul>\n</samp>\n',
  'case-studies':
    '<samp>\n\n<h1 id="case-studies">Case Studies</h1>\n<ul>\n<li><a href="https://medium.com/dev-channel/a-netflix-web-performance-case-study-c0bcde26a9d9">📝 A Netflix Web Performance Case Study</a></li>\n<li><a href="https://instagram-engineering.com/making-instagram-com-faster-part-1-62cc0c327538">📝 Making Instagram.com faster: Part 1</a></li>\n<li><a href="https://instagram-engineering.com/making-instagram-com-faster-part-2-f350c8fba0d4">📝 Making Instagram.com faster: Part 2</a></li>\n<li><a href="https://instagram-engineering.com/making-instagram-com-faster-part-3-cache-first-6f3f130b9669">📝 Making Instagram.com faster: Part 3 — cache first</a></li>\n<li><a href="https://instagram-engineering.com/making-instagram-com-faster-code-size-and-execution-optimizations-part-4-57668be796a8">📝 Making instagram.com faster: Code size and execution optimizations (Part 4)</a></li>\n<li><a href="https://www.iamtk.co/optimizing-the-performance-of-a-react-progressive-web-app">📝 Optimizing the Performance of a React Progressive Web App</a></li>\n<li><a href="https://medium.com/dev-channel/a-pinterest-progressive-web-app-performance-case-study-3bd6ed2e6154?source=search_post---------6">📝 A Pinterest Progressive Web App Performance Case Study</a></li>\n<li><a href="https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3">📝 Twitter Lite and High Performance React Progressive Web Apps at Scale</a></li>\n<li><a href="https://medium.com/airbnb-engineering/recent-web-performance-fixes-on-airbnb-listing-pages-6cd8d93df6f4">📝 React Performance Fixes on Airbnb Listing Pages</a></li>\n<li><a href="https://lucianohgo.com/posts/the-road-to-great-product-performance-first-steps">📝 The Road to Great Product Performance: The First Steps</a></li>\n<li><a href="https://www.zillow.com/tech/bigger-faster-more-engaging-budget/">📝 Zillow: Bigger, Faster, and More Engaging while on a Budget</a></li>\n<li><a href="https://slack.engineering/gantry-slacks-fast-booting-frontend-framework-fb70c8eed2fd">📝 Gantry: Slack’s Fast-booting Frontend Framework</a></li>\n<li><a href="https://medium.com/@addyosmani/a-tinder-progressive-web-app-performance-case-study-78919d98ece0">📝 A Tinder PWA Performance Case Study</a></li>\n<li><a href="https://medium.com/dev-channel/treebo-a-react-and-preact-progressive-web-app-performance-case-study-5e4f450d5299">📝 Treebo: A React PWA Performance Case Study</a></li>\n<li><a href="https://web.dev/how-mercadolibre-optimized-web-vitals/">📝 How Mercado Libre optimized for Web Vitals (TBT/FID)</a></li>\n<li><a href="https://developers.google.com/web/showcase/2018/nikkei">📝 Nikkei achieves a new level of quality and performance with their multi-page PWA</a></li>\n<li><a href="https://medium.com/technogise/journey-of-improving-react-app-performance-by-10x-9195d4b483d4">📝 Journey of Improving React App Performance by 10x</a></li>\n<li><a href="https://web.dev/tags/case-study/">📝 Web dev: Case Study</a></li>\n<li><a href="https://papyrus.dev/@PapyrusBlog/how-we-reduced-next.js-page-size-by-3.5x-and-achieved-a-98-lighthouse-score?">📝 How we reduced Next.js page size by 3.5x and achieved a 98 Lighthouse score</a></li>\n<li><a href="https://github.blog/2021-01-29-making-githubs-new-homepage-fast-and-performant/">📝 Making GitHub’s new homepage fast and performant</a></li>\n<li><a href="https://simplified.dev/performance/impact-of-web-performance">📝 The Impact of Web Performance</a></li>\n<li><a href="https://medium.com/@armelpingault/how-to-convince-your-client-to-focus-on-web-performance-a-case-study-35f12385689">📝 How to convince your client to focus on Web Performance: a case study</a></li>\n<li><a href="https://netflixtechblog.com/crafting-a-high-performance-tv-user-interface-using-react-3350e5a6ad3b">📝 Crafting a high-performance TV user interface using React</a></li>\n<li><a href="https://www.smashingmagazine.com/2022/02/javascript-bundle-performance-code-splitting/">📝 Improving JavaScript Bundle Performance With Code-Splitting</a></li>\n<li><a href="https://techblog.wikimedia.org/2020/11/23/web-performance-case-study-wikipedia-page-previews">📝 Web performance case study: Wikipedia page previews</a></li>\n<li><a href="https://www.smashingmagazine.com/2014/09/improving-smashing-magazine-performance-case-study">📝 Improving Smashing Magazine’s Web Performance: A Case Study</a></li>\n<li><a href="https://3perf.com/blog/notion">📝 Case study: Analyzing Notion app performance</a></li>\n<li><a href="https://iamakulov.com/notes/walmart">📝 Case study: analyzing the Walmart site performance</a></li>\n<li><a href="https://web.dev/renault">📝 Case Study Renault Group</a></li>\n<li><a href="https://techblog.yahoo.co.jp/entry/2021022230076263/">📝 Improve user experience! How we manage the Core Web Vitals on our Yahoo! JAPAN News website</a></li>\n<li><a href="https://www.notion.so/blog/faster-page-load-navigation">📝 Notion&#39;s page load and navigation times just got faster</a></li>\n<li><a href="https://fershad.com/writing/quick-performance-audit-taiwan-covid-vaccination-website">📝 Quick Performance Audit - Taiwan COVID Vaccination Website</a></li>\n<li><a href="https://tannerhodges.com/blog/hughesnet-vs-tesla-a-case-study-in-field-data-vs-lab-data">📝 HughesNet vs Tesla: A Case Study in Field Data vs Lab Data</a></li>\n<li><a href="https://web.dev/rakuten">📝 How Rakuten 24&#39;s investment in Core Web Vitals increased revenue per visitor by 53.37% and conversion rate by 33.13%</a></li>\n<li><a href="https://web.dev/quintoandar">📝 How QuintoAndar increased conversion rates and pages per session by improving page performance</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1522008502398554113">📝 Spotify Performance Profiling</a></li>\n<li><a href="resources/analyzing-wikipedia-users-perceived-quality-of-experience-a-large-scale-study.pdf">📝 Analyzing Wikipedia Users&#39; Perceived Quality of Experience</a></li>\n<li><a href="https://engineering.atspotify.com/2022/09/from-development-to-real-users-how-to-create-a-web-performance-story">📝 From Development to Real Users: How to Create a Web Performance Story</a></li>\n<li><a href="https://web.dev/better-youtube-web-part1">📝 Building a Better Web - Part 1: A faster YouTube on web</a></li>\n<li><a href="https://engineering.indeedblog.com/blog/2022/01/speed-matters">📝 Speed Matters, But It Isn’t Everything</a></li>\n<li><a href="https://www.causal.app/blog/next-js">📝 How We Improved React Loading Times by 70% with Next.js</a></li>\n<li><a href="https://web.dev/ndtv">📝 NDTV achieved a 55% improvement in LCP by optimizing for Core Web Vitals</a></li>\n<li><a href="https://web.dev/yahoo-japan-news">📝 How CLS optimizations increased Yahoo! JAPAN News&#39;s page views per session by 15%</a></li>\n<li><a href="https://web.dev/agrofy">📝 Agrofy: A 70% improvement in LCP correlated to a 76% reduction in load abandonment</a></li>\n<li><a href="https://engineering.rei.com/web-performance/catch-the-wheel.html">📝 REI: FCP and LCP improvements</a></li>\n<li><a href="https://performance.shopify.com/blogs/blog/how-sunday-citizen-improved-conversions-by-focusing-on-performance">📝 How Sunday Citizen improved conversions by focusing on performance</a></li>\n<li><a href="https://www.patterns.dev/posts/nextjs-casestudy">📝 Optimizing Core Web Vitals on a Next.js app</a></li>\n<li><a href="https://web.archive.org/web/20230313110110/https://twitter.com/alonkochba/status/1584418867295965184">📝 How Wix improved TTFB with 103 Early Hints</a></li>\n<li><a href="https://www.giacomodebidda.com/posts/performance-audit-of-an-italian-news-website">📝 Performance audit of an Italian news website</a></li>\n<li><a href="https://performance.shopify.com/blogs/blog/how-carpe-achieved-record-breaking-sales-by-focusing-on-performance-optimization">📝 How Carpe achieved record-breaking sales by focusing on performance optimization</a></li>\n<li><a href="https://www.nray.dev/blog/300ms-faster-reducing-wikipedias-total-blocking-time">📝 300ms Faster: Reducing Wikipedia&#39;s Total Blocking Time</a></li>\n<li><a href="https://vimeo.com/showcase/4970467/video/254947097">🎥 Building Performance for the Long Term</a></li>\n<li><a href="https://www.youtube.com/watch?v=sKvK3x9zdt0&amp;ab_channel=YoavWeiss">🎥 Optimizing Preview Popups</a></li>\n<li><a href="https://www.youtube.com/watch?v=ctavZT87syI">🎥 Lessons learned from performance monitoring in Chrome</a></li>\n<li><a href="https://www.youtube.com/watch?v=8xpjecvxnRM">🎥 Core Web Vitals: Theory and practice</a></li>\n<li><a href="https://www.youtube.com/watch?v=V8oTJ8OZ5S0&amp;ab_channel=NetflixUIEngineering">🎥 Performance Signup in React &amp; Transactional Apps with Redux</a></li>\n</ul>\n</samp>\n',
  'cache-and-memoization':
    '<samp>\n\n<h1 id="cache--memoization">Cache &amp; Memoization</h1>\n<ul>\n<li><a href="https://www.youtube.com/watch?v=tprJYFkv4LU&amp;ab_channel=GoogleChromeDevelopers">🎥 Love your cache: Optimize for the second load</a></li>\n</ul>\n</samp>\n',
  prefetching:
    '<samp>\n\n<h1 id="prefetching">Prefetching</h1>\n<ul>\n<li><a href="https://medium.com/webpack/link-rel-prefetch-preload-in-webpack-51a52358f84c">📝 <code>&lt;link rel=”prefetch/preload”&gt;</code> in webpack</a></li>\n<li><a href="https://webpack.js.org/guides/code-splitting/#prefetchingpreloading-modules">📝 Webpack Prefetching/Preloading modules</a></li>\n<li><a href="https://dev.to/addyosmani/speed-up-next-page-navigations-with-prefetching-4285">📝 Speed up next-page navigations with prefetching</a></li>\n<li><a href="https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf">📝 Preload, Prefetch And Priorities in Chrome</a></li>\n<li><a href="https://developers.cyberagent.co.jp/blog/archives/37264/">📝 Instant And Consistent Page Load Through Prerendering</a></li>\n<li><a href="https://github.com/GoogleChromeLabs/preload-webpack-plugin">🛠 preload-webpack-plugin</a></li>\n<li><a href="https://www.youtube.com/watch?v=UwjzFGCAuLw">🎥 The Art of Predictive Prefetch</a></li>\n</ul>\n<h2 id="tools">Tools</h2>\n<ul>\n<li><a href="https://github.com/GoogleChromeLabs/quicklink">🛠 Faster subsequent page-loads by prefetching in-viewport links during idle time</a></li>\n</ul>\n</samp>\n',
  images:
    '<samp>\n\n<h1 id="images">Images</h1>\n<ul>\n<li><a href="https://www.youtube.com/watch?v=F1kYBnY6mwg">🎥 Image compression deep-dive</a></li>\n<li><a href="https://www.youtube.com/watch?v=XecoxR1ckbc&amp;ab_channel=estellevw">🎥 Responsive Images for the Web</a></li>\n<li><a href="https://www.youtube.com/watch?v=jTXhYj2aCDU">🎥 Image Optimization | performance.now() 2018</a></li>\n<li><a href="https://www.youtube.com/watch?v=VHm5Ql33JYw">🎥 The AVIF Image Format</a></li>\n<li><a href="https://www.youtube.com/watch?v=w6TiSuQkqvY">🎥 Picture Perfect</a></li>\n<li><a href="https://www.youtube.com/watch?v=YsbsKimR-Fw">🎥 JPEG XL: An Update</a></li>\n<li><a href="https://www.youtube.com/watch?v=f_Qkd1LC0do">🎥 A WebP Update</a></li>\n<li><a href="https://www.youtube.com/watch?v=tz5bpAQY43k">🎥 WebP, AVIF &amp; More: Image Adoption Stats</a></li>\n<li><a href="https://www.youtube.com/watch?v=9E3Vp-LXfag">🎥 Faster loading times with AVIF images | Workshop</a></li>\n<li><a href="https://www.youtube.com/watch?v=n_uNPbdenRs">🎥 JPEG &#39;files&#39; &amp; Colour (JPEG Pt1)</a></li>\n<li><a href="https://www.youtube.com/watch?v=Q2aEzeMDHMA">🎥 JPEG DCT, Discrete Cosine Transform (JPEG Pt2)</a></li>\n<li><a href="https://www.youtube.com/watch?v=pGZoFwmLBVc&amp;ab_channel=WeyWeyWeb">🎥 Images blast off at the speed of Jamstack</a></li>\n<li><a href="https://github.com/nucliweb/image-element">:octocat: Repository to collect best practices for web images</a></li>\n<li><a href="https://stackoverflow.blog/2022/03/28/picture-perfect-images-with-the-modern-element">📝 Picture perfect images with the modern <code>&lt;img&gt;</code> element</a></li>\n<li><a href="https://www.smashingmagazine.com/2014/05/responsive-images-done-right-guide-picture-srcset/">📝 Responsive Images Done Right: A Guide To <picture> And srcset</a></li>\n<li><a href="https://caniuse.com/webp">📝 Can I use WebP</a></li>\n<li><a href="https://caniuse.com/avif">📝 Can I use AVIF</a></li>\n<li><a href="https://caniuse.com/jpegxl">📝 Can I use JPEG-XL</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/reduce-image-sizes-by-removing-metadata">📝 Reduce Image Sizes by Removing Metadata</a></li>\n<li><a href="https://calibreapp.com/blog/image-optimisation-guide">📝 The Ultimate Guide to Image Optimisation</a></li>\n</ul>\n<h2 id="tools">Tools</h2>\n<ul>\n<li><a href="https://optimage.app">🛠 Optimage</a></li>\n<li><a href="https://imageoptim.com">🛠 ImageOptim</a></li>\n<li><a href="https://webponize.org">🛠 WebPonize</a></li>\n<li><a href="https://squoosh.app">🛠 squoosh</a></li>\n<li><a href="https://cloudinary.com">🛠 Cloudinary</a></li>\n<li><a href="https://compress-or-die.com/">🛠 Compress-Or-Die</a></li>\n</ul>\n</samp>\n',
  ux: '<samp>\n\n<h1 id="ux">UX</h1>\n<ul>\n<li><a href="./improve-perceived-performance.pdf">📝 Improving Perceived Performance</a></li>\n<li><a href="https://designingforperformance.com">📝 Designing for Performance</a></li>\n<li><a href="https://www.smashingmagazine.com/2016/11/true-lies-of-optimistic-user-interfaces">📝 True Lies Of Optimistic User Interfaces</a></li>\n<li><a href="https://techblog.wikimedia.org/2019/05/29/performance-perception-how-satisfied-are-wikipedia-users">📝 Performance perception: How satisfied are Wikipedia users?</a></li>\n<li><a href="https://techblog.wikimedia.org/2019/06/13/performance-perception-the-effect-of-late-loading-banners">📝 Performance perception: The effect of late-loading banners</a></li>\n<li><a href="https://techblog.wikimedia.org/2019/06/17/performance-perception-correlation-to-rum-metrics">📝 Performance perception: Correlation to RUM metrics</a></li>\n<li><a href="https://resilientwebdesign.com">📝 Resilient web design</a></li>\n<li><a href="https://web.dev/smoothness">📝 Towards an animation smoothness metric</a></li>\n<li><a href="https://calendar.perfplanet.com/2021/hands-on-with-the-new-responsiveness-metrics">📝 Hands On with the new Responsiveness Metrics</a></li>\n<li><a href="https://web.dev/responsiveness">📝 An experimental responsiveness metric</a></li>\n<li><a href="http://farmdev.com/thoughts/108/the-art-of-ui-skeletons">📝 The Art of UI Skeletons</a></li>\n<li><a href="https://www.viget.com/articles/a-bone-to-pick-with-skeleton-screens">📝 A Bone to Pick with Skeleton Screens</a></li>\n<li><a href="https://simonhearne.com/2021/optimistic-ui-patterns">📝 Optimistic UI Patterns for Improved Perceived Performance</a></li>\n<li><a href="https://instamobile.io/mobile-design/perceived-performance-mobile-apps">📝 How to Improve Perceived Performance in Mobile Apps</a></li>\n<li><a href="https://uxdesign.cc/performance-design-designing-for-the-illusion-of-speed-576110e9e558">📝 Performance Design: Designing for the illusion of speed</a></li>\n<li><a href="https://marvelapp.com/blog/a-designers-guide-to-perceived-performance">📝 A Designer’s Guide to Perceived Performance</a></li>\n<li><a href="https://www.tactuallabs.com/papers/howMuchFasterIsFastEnoughCHI15.pdf">📝 How Much Faster is Fast Enough? User Perception of Latency &amp; Latency Improvements in Direct and Indirect Touch</a></li>\n<li><a href="https://www.youtube.com/watch?v=USH4iPQ44LQ">🎥 Perceived Performance: The only kind that really matters</a></li>\n<li><a href="https://www.youtube.com/watch?v=puUPpVrIRkc&amp;t=488s">🎥 Adaptive Loading - Improving web performance on slow devices</a></li>\n<li><a href="https://vimeo.com/496918165">🎥 Design Principles For The Web</a></li>\n<li><a href="https://www.youtube.com/watch?v=b2PaxNwr9nI">🎥 Building The Web</a></li>\n<li><a href="https://www.youtube.com/watch?v=96DCTASFniI&amp;list=PLgaHsrPMLcFBD8kHNmgeBstA3zOxY_x-j&amp;index=3">🎥 The Layers of the Web</a></li>\n<li><a href="https://vimeo.com/251825705">🎥 Stephanie Walter on Cheating The UX When There Is Nothing More To Optimize</a></li>\n<li><a href="https://www.youtube.com/watch?v=tah_hbOc86w">🎥 Measuring User Perceived Performance to Prioritize Product Work</a></li>\n</ul>\n</samp>\n',
  'build-tools':
    '<samp>\n\n<h1 id="build-tools">Build tools</h1>\n<ul>\n<li><a href="https://webpack.js.org/guides/tree-shaking/#clarifying-tree-shaking-and-sideeffects">📝 Webpack Tree Shaking</a></li>\n<li><a href="https://philipwalton.com/articles/using-native-javascript-modules-in-production-today">📝 Using Native JavaScript Modules in Production Today</a></li>\n<li><a href="https://www.npmjs.com/package/speed-measure-webpack-plugin">📝 speed-measure-webpack-plugin</a></li>\n<li><a href="https://calendar.perfplanet.com/2018/doing-differential-serving-in-2019">📝 Doing Differential Serving in 2019</a></li>\n<li><a href="https://web.dev/publish-modern-javascript/">📝 Publish, ship, and install modern JavaScript for faster applications</a></li>\n<li><a href="https://github.com/iamakulov/awesome-webpack-perf">📝 Awesome Webpack Perf</a></li>\n<li><a href="https://medium.com/airbnb-engineering/faster-javascript-builds-with-metro-cfc46d617a1f">📝 Faster JavaScript Builds with Metro</a></li>\n<li><a href="https://medium.com/frontend-canteen/13-webpack-optimization-tips-you-should-know-668666f8c020">📝 13 Webpack Optimization Tips You Should Know</a></li>\n<li><a href="https://formidable.com/blog/2018/finding-webpack-duplicates-with-inspectpack-plugin/">📝 Finding and fixing duplicates in webpack with Inspectpack</a></li>\n<li><a href="https://medium.com/javascript-in-plain-english/how-to-improve-webpack-performance-7637db26fa5f">📝 How to Improve Webpack Performance</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/webperformance-and-compression">📝 Webperformance and Compression</a></li>\n<li><a href="https://slack.engineering/keep-webpack-fast-a-field-guide-for-better-build-performance">📝 Keep webpack Fast: A Field Guide for Better Build Performance</a></li>\n<li><a href="https://github.com/GoogleChromeLabs/webpack-libs-optimizations">:octocat: Webpack Libs Optimizations</a></li>\n<li><a href="https://github.com/iamakulov/awesome-webpack-perf">:octocat: Awesome Webpack Perf</a></li>\n</ul>\n</samp>\n',
  react:
    '<samp>\n\n<h1 id="react">React</h1>\n<ul>\n<li><a href="https://web.dev/granular-chunking-nextjs">📝 Improved Next.js and Gatsby page load performance with granular chunking</a></li>\n<li><a href="https://calibreapp.com/blog/nextjs-performance">📝 Next.js Performance: Making a Fast Framework Even Faster</a></li>\n<li><a href="https://dev.to/adevnadia/how-to-write-performant-react-code-rules-patterns-dos-and-donts-40gk">📝 How to write performant React code: rules, patterns, do&#39;s and don&#39;ts</a></li>\n<li><a href="https://blog.theodo.com/2022/01/react-list-hooks-avoid-render">📝 React Hooks and Tips to Avoid Useless Component Render Applied on Lists</a></li>\n<li><a href="https://dev.to/adevnadia/how-to-write-performant-react-apps-with-context-24cp">📝 How to write performant React apps with Context</a></li>\n<li><a href="https://github.com/mq2thez/blog/blob/main/upgrade-react-etsy/preact-vs-react.md">📝 Updating React at Etsy</a></li>\n<li><a href="https://houssein.me/progressive-react">📝 progressive react</a></li>\n<li><a href="https://web.dev/script-component">📝 Optimizing third-party script loading in Next.js</a></li>\n<li><a href="https://royi-codes.vercel.app/thousand-usecallbacks">📝 Death by a thousand useCallbacks</a></li>\n<li><a href="https://github.com/reactwg/react-18/discussions/37">📝 New Suspense SSR Architecture in React 18</a></li>\n<li><a href="https://shud.in/posts/ssr-streaming-and-css-in-js">📝 SSR, Streaming, and CSS-in-JS</a></li>\n<li><a href="https://github.com/callstack/reassure">📝 Reassure: Performance testing companion for React</a></li>\n<li><a href="https://www.developerway.com/posts/how-to-write-performant-react-code">📝 How to write performant React code: rules, patterns, do&#39;s and don&#39;ts</a></li>\n<li><a href="https://www.simform.com/blog/react-performance">📝 React Performance – 13 Ways to Optimize Performance of your React App</a></li>\n<li><a href="https://www.codementor.io/blog/react-optimization-5wiwjnf9hj">📝 21 Performance Optimization Techniques for React Apps</a></li>\n<li><a href="https://medhatdawoud.net/blog/optimize-data-fetching">📝 Optimize Data Fetching</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/mobile-performance-of-next-js-sites">📝 Mobile Performance of Next.js Sites</a></li>\n<li><a href="https://3perf.com/talks/react-concurrency">📝 React Concurrency, Explained</a></li>\n<li><a href="https://www.youtube.com/watch?v=Zemce4Y1Y-A">🎥 DOM as a Second-class Citizen</a></li>\n<li><a href="https://www.youtube.com/watch?v=i-_6wyohduo&amp;ab_channel=SmashingMagazine">🎥 React 18 Concurrency, Explained</a></li>\n</ul>\n<h2 id="rendering-architecture-fiber--signal">Rendering Architecture: Fiber / Signal</h2>\n<ul>\n<li><a href="https://indepth.dev/posts/1008/inside-fiber-in-depth-overview-of-the-new-reconciliation-algorithm-in-react">📝 Inside Fiber: in-depth overview of the new reconciliation algorithm in React</a></li>\n<li><a href="https://indepth.dev/posts/1009/in-depth-explanation-of-state-and-props-update-in-react">📝 In-depth explanation of state and props update in React</a></li>\n<li><a href="https://imkev.dev/optimizing-rerenders">📝 Should you optimize every re-render?</a></li>\n<li><a href="https://www.joshwcomeau.com/react/why-react-re-renders">📝 Why React Re-Renders</a></li>\n<li><a href="https://www.developerway.com/posts/react-re-renders-guide">📝 React re-renders guide: everything, all at once</a></li>\n<li><a href="https://itnext.io/react-performance-how-to-avoid-redundant-re-renders-6a33618d92a3">📝 React Performance: How to avoid redundant re-renders</a></li>\n<li><a href="https://imkev.dev/react-rendering-order">📝 React Rendering Order</a></li>\n<li><a href="https://imkev.dev/react-reconciliation-performance-measures">📝 Learning the React reconciliation algorithm with performance measures</a></li>\n<li><a href="https://preactjs.com/blog/signal-boosting">📝 Signal Boosting</a></li>\n<li><a href="https://beta.nextjs.org/docs/rendering/server-and-client-components">📝 Server and Client Components</a></li>\n<li><a href="https://prateeksurana.me/blog/future-of-rendering-in-react">📝 The future of rendering in React</a></li>\n<li><a href="https://www.youtube.com/watch?v=jMZBhHzD3H8&amp;ab_channel=ReactNext">🎥 Inside Fiber: the in-depth overview you wanted</a></li>\n<li><a href="https://www.youtube.com/watch?v=aS41Y_eyNrU">🎥 React Fiber Deep Dive</a></li>\n<li><a href="https://www.youtube.com/watch?v=ZCuYPiUIONs">🎥 A Cartoon Intro to Fiber</a></li>\n<li><a href="https://www.youtube.com/watch?v=js7E1VKqIng&amp;ab_channel=ReactIndia">🎥 Deep diving on Concurrent React</a></li>\n<li><a href="https://www.youtube.com/watch?v=TQQPAU21ZUw&amp;ab_channel=MetaOpenSource">🎥 Data Fetching with React Server Components</a></li>\n</ul>\n<h2 id="measuring">Measuring</h2>\n<ul>\n<li><a href="https://www.iamtk.co/profiling-and-optimizing-the-runtime-performance-with-the-devtools-performance-tab">📝 Profiling &amp; Optimizing the runtime performance with the DevTools Performance tab</a></li>\n<li><a href="https://www.debugbear.com/blog/measuring-react-app-performance">📝 Measuring React app performance</a></li>\n<li><a href="https://addyosmani.com/blog/profiling-react-js/">📝 Profiling React.js Performance</a></li>\n<li><a href="https://3perf.com/blog/react-monitoring">📝 Get Fast, Stay Fast: How To Monitor React Render Performance</a></li>\n<li><a href="https://medium.com/@vcarl/performance-profiling-a-redux-app-c85e67bf84ae">📝 Performance Profiling a Redux App</a></li>\n<li><a href="https://medium.com/@goooseman/measuring-js-code-performance-part-i-using-a-benchmark-f6fd45a5cea">📝 Measuring JS code performance. Part I: using react-benchmark</a></li>\n<li><a href="https://medium.com/@goooseman/measuring-js-code-performance-part-ii-interaction-speed-b18cf2201a84">📝 Measuring JS code performance. Part II: interaction speed</a></li>\n<li><a href="https://www.youtube.com/watch?v=00RoZflFE34&amp;ab_channel=BenAwad">🎥 How to use the React Profiler to find and fix Performance Problems</a></li>\n<li><a href="https://www.youtube.com/watch?v=uZn9tVIISeQ">🎥 Profiling React Apps like a Pro</a></li>\n<li><a href="https://www.youtube.com/watch?v=sFvOMc7W7k0&amp;ab_channel=ReactNext">🎥 React Performance with React Dev Tools</a></li>\n</ul>\n<h2 id="courses">Courses</h2>\n<ul>\n<li><a href="https://smashingconf.com/online-workshops/workshops/react-performance-ivan-akulov">The React Performance Masterclass</a></li>\n<li><a href="https://www.alura.com.br/curso-online-react-otimizando-performance">🇧🇷 React: otimizando a performance</a></li>\n</ul>\n</samp>\n',
  javascript:
    '<samp>\n\n<h1 id="javascript">JavaScript</h1>\n<ul>\n<li><a href="https://codeburst.io/javascript-compiler-optimization-techniques-only-for-experts-58d6f5f958ca">📝 JavaScript Compiler Optimization Techniques— only for Experts</a></li>\n<li><a href="https://dev.to/blessingartcreator/17-javascript-optimization-tips-3gil">📝 17 Javascript optimization tips to know in 2021</a></li>\n<li><a href="https://medium.com/@bretcameron/13-tips-to-write-faster-better-optimized-javascript-dc1f9ab063d8">📝 13 Tips to Write Faster, Better-Optimized JavaScript</a></li>\n<li><a href="https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf">📝 How JavaScript works: an overview of the engine, the runtime, and the call stack</a></li>\n<li><a href="https://blog.sessionstack.com/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code-ac089e62b12e">📝 How JavaScript works: inside the V8 engine + 5 tips on how to write optimized code</a></li>\n<li><a href="https://blog.sessionstack.com/how-javascript-works-memory-management-how-to-handle-4-common-memory-leaks-3f28b94cfbec">📝 How JavaScript works: memory management + how to handle 4 common memory leaks</a></li>\n<li><a href="https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5">📝 How JavaScript works: Event loop and the rise of Async programming + 5 ways to better coding with async/await</a></li>\n<li><a href="https://www.youtube.com/watch?v=FNGFlnUteBU&amp;ab_channel=CITYJSCONFERENCE">🎥 Multicore JavaScript: Past, Present and Future</a></li>\n</ul>\n</samp>\n',
  'web-apis':
    '<samp>\n\n<h1 id="web-apis">Web APIs</h1>\n<ul>\n<li><a href="https://www.oddbird.net/2022/06/29/shared-elements">📝 Every Transition is a Page Transition?</a></li>\n<li><a href="https://calendar.perfplanet.com/2017/tracking-cpu-with-long-tasks-api">📝 Tracking CPU with Long Tasks API</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/web-performance-apis-appreciation-post">📝 Web Performance APIs Appreciation Post</a></li>\n<li><a href="https://nitropack.io/blog/post/priority-hints">📝 Speed Up Resource Loading with Priority Hints and fetchpriority</a></li>\n</ul>\n</samp>\n',
  css: '<samp>\n\n<h1 id="css">CSS</h1>\n<ul>\n<li><a href="https://pustelto.com/blog/css-vs-css-in-js-perf/">📝 Real-world CSS vs. CSS-in-JS performance comparison</a></li>\n<li><a href="https://purgecss.com">📝 PurgeCSS</a></li>\n<li><a href="https://imkev.dev/loading-css">📝 Loading CSS - Performance Cheatsheet</a></li>\n<li><a href="https://imkev.dev/inlining-critical-css">📝 Inlining critical CSS</a></li>\n<li><a href="https://dev.to/denisx/reduce-bundle-size-via-one-letter-css-classname-hash-strategy-10g6">📝 Reduce bundle size via one-letter css classname hash strategy</a></li>\n<li><a href="https://dev.to/srmagura/why-were-breaking-up-wiht-css-in-js-4g9b">📝 Why We&#39;re Breaking Up with CSS-in-JS</a></li>\n<li><a href="https://nolanlawson.com/2022/10/22/style-performance-and-concurrent-rendering">📝 Style performance and concurrent rendering</a></li>\n<li><a href="https://github.com/geeky-biz/css-in-js-benchmark">📝 Performance comparison of css-in-js libraries</a></li>\n<li><a href="https://medium.com/airbnb-engineering/airbnbs-trip-to-linaria-dc169230bd12">📝 Airbnb’s Trip to Linaria</a></li>\n<li><a href="https://github.com/emotion-js/emotion/discussions/2827">📝 Future of runtime CSS-in-JS</a></li>\n<li><a href="https://blogs.windows.com/msedgedev/2023/01/17/the-truth-about-css-selector-performance">📝 The truth about CSS selector performance</a></li>\n</ul>\n</samp>\n',
  fonts:
    '<samp>\n\n<h1 id="fonts">Fonts</h1>\n<ul>\n<li><a href="https://caniuse.com/woff2">Can I use woff2</a></li>\n</ul>\n<h2 id="tools">Tools</h2>\n<ul>\n<li><a href="https://www.fontsquirrel.com/tools/webfont-generator">🛠 Font Squirrel</a></li>\n<li><a href="https://github.com/zachleat/glyphhanger">🛠 glyphhanger</a></li>\n<li><a href="https://v-fonts.com">🛠 Variable Fonts</a></li>\n<li><a href="https://fonts.google.com">🛠 Google Fonts</a></li>\n</ul>\n</samp>\n',
  sustainability:
    '<samp>\n\n<h1 id="sustainability">Sustainability</h1>\n<ul>\n<li><a href="https://blog.webpagetest.org/posts/website-performance-and-the-planet">📝 Website performance and the planet</a></li>\n<li><a href="https://ecoping.earth/blog/core-web-vitals-and-sustainability">📝 Core Web Vitals meets sustainability</a></li>\n<li><a href="https://www.smashingmagazine.com/2019/01/save-planet-improving-website-performance">📝 How Improving Website Performance Can Help Save The Planet</a></li>\n<li><a href="https://bullhorncreative.com/blog/web-performance-ecological-impact">📝 Web Performance + Ecological Impact</a></li>\n</ul>\n</samp>\n',
  backend:
    '<samp>\n\n<h1 id="backend">Backend</h1>\n<ul>\n<li><a href="https://bravenewgeek.com/everything-you-know-about-latency-is-wrong">📝 Everything You Know About Latency Is Wrong</a></li>\n</ul>\n</samp>\n',
  architecture:
    '<samp>\n\n<h1 id="architecture">Architecture</h1>\n<ul>\n<li><a href="https://medium.com/@luke_schmuke/how-we-achieved-the-best-web-performance-with-partial-hydration-20fab9c808d5">📝 The case of partial hydration (with Next and Preact)</a></li>\n<li><a href="https://web.dev/apply-instant-loading-with-prpl">📝 Apply instant loading with the PRPL pattern</a></li>\n<li><a href="https://developers.google.com/web/updates/2015/11/app-shell">📝 Instant Loading Web Apps with an Application Shell Architecture</a></li>\n<li><a href="https://developers.google.com/web/updates/2019/02/rendering-on-the-web">📝 Rendering on the Web</a></li>\n<li><a href="https://snugug.com/musings/modern-cutting-the-mustard">📝 A Modern Take on Cutting the Mustard</a></li>\n<li><a href="https://alistapart.com/article/understandingprogressiveenhancement">📝 Understanding Progressive Enhancement</a></li>\n<li><a href="https://dev.to/ryansolid/conquering-javascript-hydration-a9f">📝 Conquering JavaScript Hydration</a></li>\n<li><a href="https://www.builder.io/blog/from-static-to-interactive-why-resumability-is-the-best-alternative-to-hydration">📝 From Static to Interactive: Why Resumability is the Best Alternative to Hydration</a></li>\n<li><a href="https://nolanlawson.com/2022/06/27/spas-theory-versus-practice">📝 SPAs: theory versus practice</a></li>\n<li><a href="https://bejamas.io/blog/understanding-rendering-in-the-jamstack/">📝 Understanding Rendering in the Jamstack</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1437415799514271746">📝 How to do partial hydration in React</a></li>\n<li><a href="https://twitter.com/dan_abramov/status/1200111677833973760">📝 Concurrent mode and partial hydration in React</a></li>\n<li><a href="https://www.patterns.dev/posts/rendering-patterns">📝 Rendering Patterns</a></li>\n<li><a href="https://ajcwebdev.com/what-is-partial-hydration-and-why-is-everyone-talking-about-it">📝 what is partial hydration and why is everyone talking about it?</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1537085468327587840">📝 Suspense hydration in React</a></li>\n<li><a href="https://dev.to/this-is-learning/conquering-javascript-hydration-a9f">📝 Conquering JavaScript Hydration</a></li>\n<li><a href="https://netflixtechblog.com/crafting-a-high-performance-tv-user-interface-using-react-3350e5a6ad3b">📝 Crafting a high-performance TV user interface using React</a></li>\n<li><a href="https://calendar.perfplanet.com/2022/signals-the-nitty-gritty">📝 Signals: the nitty-gritty</a></li>\n<li><a href="https://dev.to/this-is-learning/why-efficient-hydration-in-javascript-frameworks-is-so-challenging-1ca3">📝 Why Efficient Hydration in JavaScript Frameworks is so Challenging</a></li>\n<li><a href="https://beta.nextjs.org/docs/rendering/fundamentals">📝 Rendering Fundamentals</a></li>\n<li><a href="https://fauna.com/blog/comparing-spas-to-ssg-and-ssr">📝 Comparing SPAs to SSG and SSR</a></li>\n<li><a href="https://betterprogramming.pub/how-resumable-beats-hydration-f845bfebc31e">📝 Server-Side Rendering: How Resumable Beats Hydration</a></li>\n<li><a href="https://medium.com/walmartglobaltech/the-benefits-of-server-side-rendering-over-client-side-rendering-5d07ff2cefe8">📝 The Benefits of Server Side Rendering Over Client Side Rendering</a></li>\n<li><a href="https://deno.com/blog/the-future-and-past-is-server-side-rendering">📝 The Future (and the Past) of the Web is Server Side Rendering</a></li>\n<li><a href="https://thetombomb.com/posts/rendering-options-on-the-web">📝 Rendering Options on the Web: Server, Client, Static</a></li>\n<li><a href="https://jasonformat.com/islands-architecture">📝 Islands Architecture</a></li>\n<li><a href="https://astro.build/blog/2023-web-framework-performance-report">📝 2023 Web Framework Performance Report</a></li>\n<li><a href="https://guydumais.digital/blog/next-js-the-ultimate-cheat-sheet-to-page-rendering">📝 Next.js: The Ultimate Cheat Sheet To Page Rendering</a></li>\n<li><a href="https://www.youtube.com/watch?v=k-A2VfuUROg">🎥 Rendering on the Web: Performance Implications of Application Architecture</a></li>\n<li><a href="https://www.youtube.com/watch?v=PN1HgvAOmi8&amp;ab_channel=RealWorldReact">🎥 Advanced Rendering Patterns</a></li>\n<li><a href="https://www.youtube.com/watch?v=PGLwRv64RzM">🎥 What happens before hydration</a></li>\n<li><a href="https://www.youtube.com/watch?v=gb2DGJB1ZsM&amp;ab_channel=ReactNext">🎥 Stream Away the Wait</a></li>\n<li><a href="https://www.youtube.com/watch?v=Nl4OwNhh2QI">🎥 Streaming in Next.js</a></li>\n</ul>\n</samp>\n',
  infrastructure:
    '<samp>\n\n<h1 id="infrastructure">Infrastructure</h1>\n<ul>\n<li><a href="https://web.dev/content-delivery-networks">📝 Content delivery networks (CDNs)</a></li>\n<li><a href="https://blog.cloudflare.com/cloud-computing-without-containers">📝 Cloud Computing without Containers</a></li>\n<li><a href="https://www.youtube.com/watch?v=a4SbDZ9Y-I4&amp;ab_channel=IlyaGrigorik">🎥 Mobile Performance from the Radio Up: 4G Architecture and its Implications</a></li>\n</ul>\n</samp>\n',
  books:
    '<samp>\n\n<h1 id="books">Books</h1>\n<ul>\n<li><a href="https://www.manning.com/books/web-performance-in-action">📚 Web Performance in Action</a></li>\n<li><a href="https://www.oreilly.com/library/view/using-webpagetest/9781491902783">📚 Using WebPageTest</a></li>\n<li><a href="https://hpbn.co">📚 High Performance Browser Networking</a></li>\n<li><a href="https://www.oreilly.com/library/view/high-performance-images/9781491925799">📚 High Performance Images</a></li>\n<li><a href="https://www.oreilly.com/library/view/high-performance-responsive/9781491949979">📚 High Performance Responsive Design</a></li>\n<li><a href="https://www.manning.com/books/http2-in-action">📚 HTTP/2 in Action</a></li>\n<li><a href="https://www.amazon.com.br/Hands-JavaScript-High-Performance-WebAssembly-ebook/dp/B082T14XFZ">📚 Hands-On JavaScript High Performance</a></li>\n<li><a href="https://www.amazon.com/Modern-Web-Performance-Optimization-Platforms/dp/1484265270">📚 Modern Web Performance Optimization</a></li>\n<li><a href="https://abookapart.com/products/responsible-javascript">📚 Responsible JavaScript</a></li>\n<li><a href="https://www.smashingmagazine.com/printed-books/image-optimization">📚 Image Optimization</a></li>\n<li><a href="https://leanpub.com/performance-optimized-react-applications">📚 Performance Optimized React Applications</a></li>\n<li><a href="https://www.oreilly.com/library/view/high-performance-mobile/9781491912546">📚 High Performance Mobile Web</a></li>\n<li><a href="https://www.amazon.com.br/JPEG-K-R-Rao/dp/8770225931">📚 JPEG Series</a></li>\n<li><a href="https://browser.engineering">📚 Web Browser Engineering</a></li>\n<li><a href="https://www.amazon.com/Time-Money-Business-Value-Performance/dp/1491928743">📚 Time Is Money: The Business Value of Web Performance</a></li>\n</ul>\n</samp>\n',
  tweets:
    '<samp>\n\n<h1 id="tweets">Tweets</h1>\n<ul>\n<li><a href="https://twitter.com/amilajack/status/1478062246072754179">The most important problems in Web Perf</a></li>\n<li><a href="https://twitter.com/Steve8708/status/1499906268781187077">Tool: quantify what will make a real difference</a></li>\n<li><a href="https://twitter.com/zeigenvector/status/1448684941663948801">Web Performance at Slack</a></li>\n<li><a href="https://twitter.com/leeerob/status/1481693352059973632">How can I optimize my frontend for the fastest page load times?</a></li>\n<li><a href="https://twitter.com/Steve8708/status/1501584994208153601">Performance Insights by Builder.io</a></li>\n<li><a href="https://twitter.com/csswizardry/status/1504106607721988102">Optimize head and body separately</a></li>\n<li><a href="https://twitter.com/ProvablyFlarnie/status/1504223109439651841">useCallback and useMemo: no perf effect</a></li>\n<li><a href="https://twitter.com/Steve8708/status/1508861192890044416">Optimizing LCP</a></li>\n<li><a href="https://twitter.com/Steve8708/status/1508502291170484224">Use Map over object</a></li>\n<li><a href="https://twitter.com/Steve8708/status/1506281613746917394">Image performance cheatsheet</a></li>\n<li><a href="https://twitter.com/Steve8708/status/1549501457140830208">Frontend performance tips to keep top of mind</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1522008502398554113">Spotify Performance Profiling</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1566716820601466880">React 18 Concurrency</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1600169184360398851">React Perf: Causal Case Study</a></li>\n<li><a href="https://twitter.com/nomsternom/status/1601587970792132608">Things I found in a slow React website today</a></li>\n<li><a href="https://twitter.com/asidorenko_/status/1605313331740418051">Another reason for not declaring React components inside other components</a></li>\n<li><a href="https://twitter.com/mhevery/status/1606438382561026049">Blank page with an embedded tweet. How bad can it be?</a></li>\n<li><a href="https://twitter.com/jebbacca/status/1608472228265345024">ChromeDevTools Long Tasks</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1610652344164954114">React 18 Concurrency, Explained</a></li>\n<li><a href="https://twitter.com/tunetheweb/status/1615685225106767874">Check out the new Priority Hints</a></li>\n<li><a href="https://twitter.com/senthil_hi/status/1589676464215326720">img fetchpriority=&quot;high&quot;: LCP improvement of ~150ms</a></li>\n<li><a href="https://twitter.com/csswizardry/status/1616906377829433351">CSS Selector Performance</a></li>\n<li><a href="https://twitter.com/stoyanstefanov/status/1617612093594939392">The difference between &quot;On Load&quot; and &quot;Document Complete&quot; in WebPageTest</a></li>\n<li><a href="https://mobile.twitter.com/clark_gunn/status/1593756237874839555/photo/1">mobile performance for sites built with Next.js</a></li>\n<li><a href="https://twitter.com/heyImMapleLeaf/status/1567960223759093760">React Time Slicing</a></li>\n<li><a href="https://twitter.com/jebbacca/status/1618615238034874371">Compile Code — Profiling</a></li>\n<li><a href="https://twitter.com/geoffreylitt/status/1632459743636717568">Signals — Reactivity + UI</a></li>\n<li><a href="https://twitter.com/alonkochba/status/1584418867295965184">How Wix improved TTFB with 103 Early Hints</a></li>\n<li><a href="https://twitter.com/tunetheweb/status/1661699095025664004">Investigating Core Web Vital issues</a></li>\n<li><a href="https://twitter.com/iamakulov/status/1661475656050556930">How I typically test performance</a></li>\n<li><a href="https://twitter.com/tunetheweb/status/1679085260263366663">Google Search Console warning the INP</a></li>\n</ul>\n</samp>\n',
  community:
    '<samp>\n\n<h1 id="community">Community</h1>\n<ul>\n<li><a href="https://webperformance.slack.com">Web Performance Slack</a></li>\n<li><a href="https://www.w3.org/webperf">Web Performance Working Group</a></li>\n<li><a href="https://community.perfplanet.com/">Planet Perfromance Community</a></li>\n</ul>\n<h2 id="conferences--meetups">Conferences &amp; Meetups</h2>\n<ul>\n<li><a href="https://conffab.com/topic/performance">Conffab - Performance</a></li>\n<li><a href="https://perfnow.nl">Perf Now Conf</a></li>\n<li><a href="https://www.meetup.com/Web-Performance-NY">New York Web Performance Group</a></li>\n</ul>\n<h2 id="blogs">Blogs</h2>\n<ul>\n<li><a href="https://www.iamtk.co">TK</a></li>\n<li><a href="https://csswizardry.com">Harry Roberts</a></li>\n<li><a href="https://infrequently.org">Alex Russell</a></li>\n<li><a href="https://www.smashingmagazine.com/category/performance">Smashing Magazine - Performance</a></li>\n<li><a href="https://fershad.com/writing/all">Fershad Irani</a></li>\n<li><a href="https://moderndevtools.com">Modern DevTools</a></li>\n<li><a href="https://imeugenia.medium.com">Eugenia Zigisova</a></li>\n<li><a href="https://iamakulov.com">Ivan Akulov</a></li>\n<li><a href="https://3perf.com">Perf perf perf</a></li>\n<li><a href="https://www.tunetheweb.com/blog">Barry Pollard</a></li>\n<li><a href="https://simonhearne.com">Simon Hearne</a></li>\n<li><a href="https://medhatdawoud.net">Medhat Dawoud</a></li>\n</ul>\n<h2 id="podcasts">Podcasts</h2>\n<ul>\n<li><a href="https://chasing-waterfalls.simplecast.com">Chasing Waterfalls</a></li>\n<li><a href="https://podcast.perfplanet.com">Planet Performance Podcast</a></li>\n<li><a href="https://www.spreaker.com/show/pureperformance">PurePerformance</a></li>\n<li><a href="https://podcast.smashingmagazine.com">Smashing Podcast</a></li>\n<li><a href="https://catchingup.dev">Catching Up With Web Performance</a></li>\n</ul>\n</samp>\n',
};
